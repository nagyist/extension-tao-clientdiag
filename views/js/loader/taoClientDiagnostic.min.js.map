{"version":3,"mappings":"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","names":["loaderScript","configUrl","bundle","loadController","controllerOptions","controllerPath","params","window","controller","document","startController","bundles","require","define","$feedbackBox","feedback","start","showMessage","helpers","data","buffer","escapeExpression","setTemplate","componentTpl","on","moduleConfig","identifiers","moduleLoader","addList","load","context","then","factories","factoryName","factoryConfig","factory","_","diagnosticFactory","Math","name","item","Number","getValue","values","min","max","count","sum","list","average","sum2","variance","middle","median","results","decimals","omit","value","defaults","messages","Array","level","options","testPercentage","globalPercentage","status","percentage","quality","thresholds","qtiJsonFile","urlTokens","extension","fullpath","baseUrl","loader","renderer","$container","end","duration","result","id","url","done","_second","_defaultTimeout","_defaultOccurrencesCount","_defaultSamples","_defaults","optimal","threshold","_thresholds","message","type","_messages","title","performancesMin","performancesMax","performancesAverage","_sampleBaseId","initConfig","labels","idx","timeout","nb","_samples","iterations","tests","async","measures","summary","getSummary","getFeedback","range","timeoutId","request","clearTimeout","bytes","seconds","speed","file","size","cb","_kilo","_mega","unit","ideal","minimumGlobalPercentage","feedbackThresholds","fallbackThreshold","_downloadData","legend","bandwidthMin","bandwidthMax","bandwidthAverage","resultsBySize","avgResult","bandwidthUnit","maxTestTakers","getStatusOptions","baseBandwidth","resultBySize","stable","text","str","upload","xhr","startTime","evt","time","loaded","uploadAvg","uploadMax","totalSpeed","maxSpeed","avgSpeed","avg","navigator","screen","e","f","toString","substring","browserVersionAction","browserVersionController","browserVersionExtension","config","win","logger","action","browserslistUrl","_placeHolders","CURRENT_BROWSER","CURRENT_OS","browser","os","unknown","currentDevice","currentOS","currentBrowser","currentVersion","map","version","flatten","some","fetchBrowserList","getPlatformInfo","catch","err","browserVersion","osVersion","isMobile","platformInfo","checkBrowserSupport","Object","method","noToken","success","replace","currentOs","helper","stack1","$","__","component","loggerFactory","store","requestData","dialogAlert","urlHelper","performancesTester","bandwidthTester","uploadTester","browserTester","getStatus","getConfig","mainTpl","resultTpl","detailsTpl","feedbackTpl","qualityBarTpl","header","info","button","actionStore","actionSchool","actionDropId","storeAllRuns","configurableText","diagnostic","changeStatus","getCustomMsg","addCustomFeedbackMsg","msg","hasFailed","addResult","$main","$result","$indicator","left","cleanUp","enable","disable","prepare","finish","deleteIdentifier","run","information","scores","testers","customInput","doRun","processTester","tester","processFailure","testerId","testerConfig","total","getCustomInput","vars","$control","state","getControl","requestSchoolName","componentConfig","school_name","school_number","manageSchoolProperties","toggleControl","find","shouldStart","toggleStart","toggleFields","storage","Promise","setInputValue","error","launch","fields","validate","runDiagnostics","response","$start","$status","$results","$btn","$details","loadingBar","diagnosticTpl","val","workstation","$list","$panel","extensionConfig","indexUrl","buttons","icon","label","actionbar","renderTo","installTester","_storageKeys","uuid","fingerprint","details","errors","changed","_thresholdValues","storageIssue","changedFingerprint","fingerprintValue","fingerprintUUID","fingerprintDetails","fingerprintChanged","fingerprintErrors","fingerprintError","key","browserStorage","browserId","lastFingerprint","freshBrowserId","newFingerprint","handleError","resolve","pendingPromises","resultFingerprint","sources","pull","exportCsv","field","keys","ctr","blob","link","attr","get","click","URL","serviceUrl","downloadFile","moment","encode","dialog","performancesTesterFactory","fingerprintTesterFactory","fingerprintTpl","csvExporter","factor","formatNumber","date","cssScope","defaultDateTimeZone","defaultDateFormat","selection","encodeHtml","installedExtension","diagnosticUrl","removeUrl","fingerprintTester","tools","actions","model","massAction","autoRender","autoDestroy","onOkBtn","remove","transform","closest","row","content","dataset","datatable","empty","available","loading","selectable","tooltipster","Authenticator","login","CompatibilityChecker","index","Diagnostic","ExcludedBrowsers","editInstance","ExcludedOS"],"sources":["../../loader/bootstrap.js","../tools/message.js","../controller/Authenticator/login.js","../component/diagnostic/tpl/component!tpl","../component/diagnostic/diagnosticLoader.js","../controller/CompatibilityChecker/diagnostics.js","../tools/fixedDecimals.js","../tools/stats.js","../tools/getConfig.js","../tools/getLabels.js","../tools/getStatus.js","../tools/performances/tester.js","../tools/bandwidth/tester.js","../tools/upload/tester.js","../tools/getPlatformInfo.js","../tools/browser/tester.js","../tools/diagnostic/tpl/main!tpl","../tools/diagnostic/tpl/result!tpl","../tools/diagnostic/tpl/details!tpl","../tools/diagnostic/tpl/feedback!tpl","tpl!taoClientDiagnostic/tools/diagnostic/tpl/quality-bar","../../taoClientDiagnosticCss/diagnostics!css","../tools/diagnostic/diagnostic.js","../templates/diagnostic/main!tpl","../controller/Diagnostic/diagnostic.js","../lib/fingerprint/fingerprint2.js","../tools/fingerprint/tester.js","../tools/diagnostic/tpl/fingerprint!tpl","../tools/csvExporter.js","../controller/Diagnostic/index.js","css!taoClientDiagnosticCss/exclusion-list-form","../controller/ExclusionList/editInstance.js","../controller/routes.js","onLayerEnd0.js","module-create.js","/github/workspace/tao/views/build/config-wrap-end-default.js"],"sourcesContent":["/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016-2018 (original work) Open Assessment Technologies SA ;\n */\n\n/**\n * Bootstrap the app, start the entry controller\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\n(function(){\n    'use strict';\n\n\n\n    var loaderScript = document.getElementById('amd-loader');\n    var configUrl = loaderScript.getAttribute('data-config');\n    var bundle  = loaderScript.getAttribute('data-bundle');\n\n    var loadController = function loadController(){\n        var controllerOptions = {};\n        var controllerPath = loaderScript.getAttribute('data-controller');\n        var params = loaderScript.getAttribute('data-params');\n        try{\n            controllerOptions = JSON.parse(params);\n        } catch(err){\n            controllerOptions = {};\n        }\n        window.require([controllerPath], function(controller) {\n            var startController = function startController(){\n                if(!window.started){\n                    window.started = true;\n                    controller.start(controllerOptions);\n                }\n            };\n            document.addEventListener('readystatechange', startController, false);\n            if (document.readyState === 'complete') {\n                startController();\n            }\n        });\n    };\n\n    //always start to load the config\n    window.require([configUrl], function() {\n\n        //define the global loading mechanism\n        if(!window.loadBundles){\n            //keep tracl of loaded bundles, even if require does it,\n            //this prevent some unecessary cycles\n            window.loaded = {};\n\n            /**\n             * Loading entry point for inter bundle dependency,\n             * always take the bundles from the params and window.bundles\n             * @param {String[]} [bundles] - an optional list of bundle to load\n             */\n            window.loadBundles = function loadBundles(bundles){\n                bundles = bundles || [];\n                bundles = bundles.concat(window.bundles)\n                bundles = bundles.filter( function(item, index){\n                    return item && bundles.indexOf(item) === index && window.loaded[item] !== true;\n                });\n                require(bundles, function(){\n                    bundles.forEach( function( item ) {\n                        window.loaded[item] = true;\n                    });\n                    loadController();\n                });\n            }\n        }\n\n        if(bundle || (window.bundles && window.bundles.length)) {\n            window.loadBundles([bundle]);\n        } else {\n            loadController();\n        }\n    });\n})();\n\ndefine(\"loader/bootstrap\", function(){});\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016-2021 (original work) Open Assessment Technologies SA;\n */\ndefine('taoClientDiagnostic/tools/message',['jquery', 'ui/feedback'], function($, feedback) {\n    'use strict';\n\n    /**\n     * Displays the messages set into a markup\n     * @param {string|jQuery|HTMLElement} container\n     */\n    return function showMessages(container) {\n        const $feedbackBox = $(container);\n\n        if ($feedbackBox.data('error')) {\n            feedback().error($feedbackBox.data('error'));\n        }\n        if ($feedbackBox.data('message')) {\n            feedback().error($feedbackBox.data('message'));\n        }\n    };\n});\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016-2021 (original work) Open Assessment Technologies SA;\n */\ndefine('taoClientDiagnostic/controller/Authenticator/login',['taoClientDiagnostic/tools/message'], function(showMessage) {\n    'use strict';\n\n    return {\n        start() {\n            showMessage('#feedback-box');\n        }\n    };\n});\n\n","\ndefine('tpl!taoClientDiagnostic/component/diagnostic/tpl/component', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n  buffer += \"<div class=\\\"diagnostics-content-area\\\">\\n    <h1>\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Diagnostic Tool\", options) : helperMissing.call(depth0, \"__\", \"Diagnostic Tool\", options)))\n    + \"</h1>\\n</div>\";\n  return buffer;\n  });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2019-2021 (original work) Open Assessment Technologies SA ;\n */\ndefine('taoClientDiagnostic/component/diagnostic/diagnosticLoader',[\n    'lodash',\n    'ui/component',\n    'core/moduleLoader',\n    'context',\n    'module',\n    'tpl!taoClientDiagnostic/component/diagnostic/tpl/component',\n    'layout/loading-bar'\n], function(_, componentFactory, moduleLoader, context, module, componentTpl, loadingBar) {\n    'use strict';\n\n    /*\n     * This component factory is loading diagnostic tool modules and initialising with their configuration.\n     * @param {object} container - Container in which the module will render diagnostic check\n     * @param {object} config - Some config options.\n     */\n    return function diagnosticLoaderFactory(container, config) {\n        const component = componentFactory()\n            // set the component's layout\n            .setTemplate(componentTpl)\n\n            // auto render on init\n            .on('init', function onDiagnosticLoaderInit() {\n                this.render(container);\n            })\n            // renders the component\n            .on('render', function onDiagnosticLoaderRender() {\n                const moduleConfig = module.config();\n                const identifiers = Object.keys(moduleConfig.diagnostics);\n                /*\n                 * This loads all the modules from module configuration, which are in the `diagnostics` array.\n                 */\n                moduleLoader({}, _.isFunction)\n                    .addList(moduleConfig.diagnostics)\n                    .load(context.bundle)\n                    .then(factories => {\n                        const componentConfig = this.getConfig();\n\n                        /*\n                         * Read all factories and initialise them with their config from component.\n                         */\n                        factories.forEach((factory, index) => {\n                            const factoryName = identifiers[index];\n                            const factoryConfig = componentConfig[factoryName];\n                            factoryConfig.controller = componentConfig.controller;\n\n                            factory(this.getElement(), factoryConfig)\n                                .on('render', function onRender() {\n                                    if (factoryConfig.autoStart) {\n                                        this.run();\n                                    }\n                                })\n                                .on('start', () => loadingBar.start())\n                                .on('end', () => loadingBar.stop());\n                        });\n\n                        /**\n                         * @event ready\n                         */\n                        this.trigger('ready');\n                    });\n            });\n\n        _.defer(() => component.init(config));\n\n        return component;\n    };\n});\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015-2021 (original work) Open Assessment Technologies SA;\n */\ndefine('taoClientDiagnostic/controller/CompatibilityChecker/diagnostics',[\n    'jquery',\n    'taoClientDiagnostic/tools/message',\n    'taoClientDiagnostic/component/diagnostic/diagnosticLoader'\n], function($, showMessage, diagnosticFactory) {\n    'use strict';\n\n    return {\n        start: function(config) {\n            const $contentArea = $('.content');\n\n            showMessage('#feedback-box');\n\n            diagnosticFactory($contentArea, config);\n        }\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015-2021 (original work) Open Assessment Technologies SA ;\n */\ndefine('taoClientDiagnostic/tools/fixedDecimals',[],function() {\n    'use strict';\n\n    /**\n     * Rounds a value to a fixed number of decimals\n     * @param {number} value - The value to round\n     * @param {number} decimals - The number of decimal\n     * @returns {number}\n     */\n    return function fixedDecimals(value, decimals) {\n        const shift = Math.pow(10, Math.abs(decimals || 1));\n        return Math.round(Number(value) * shift) / shift || 0;\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015-2021 (original work) Open Assessment Technologies SA ;\n */\ndefine('taoClientDiagnostic/tools/stats',['lodash', 'taoClientDiagnostic/tools/fixedDecimals'], function(_, fixedDecimals) {\n    'use strict';\n\n    /**\n     * Gets a getter function that extracts a value from a record.\n     * @param {string|Function} name - the name to extract from the record, or a getter function\n     * @returns {Function}\n     * @private\n     */\n    function valueGetter(name) {\n        if ('function' === typeof name) {\n            return name;\n        }\n\n        return item => (item && item[name]) || 0;\n    }\n\n    /**\n     * Computes some stats on a list from a particular field\n     * @param {Array|object} list - The list to compute stats on\n     * @param {string|Function} fieldName - The name of the field to process, or a callback method returning the value\n     * @param {number} [decimals] - Optional number of fixed decimals for values\n     * @returns {object}\n     */\n    return function stats(list, fieldName, decimals) {\n        const getValue = valueGetter(fieldName);\n        const values = [];\n        let min = Number.MAX_VALUE;\n        let max = 0;\n        let count = 0;\n\n        // process first pass stats: compute sum, min and max values\n        const sum = _.reduce(\n            list,\n            (sum, item) => {\n                if ('undefined' !== typeof item) {\n                    const value = getValue(item);\n                    values.push(value);\n                    min = Math.min(min, value);\n                    max = Math.max(max, value);\n                    sum += value;\n                    count++;\n                    return sum;\n                }\n            },\n            0\n        );\n\n        // compute the average value\n        const average = sum / (count || 1);\n\n        // process second pass stats: compute variance\n        const sum2 = values.reduce((sum, value) => {\n            const diff = value - average;\n            sum += diff * diff;\n            return sum;\n        }, 0);\n\n        // compute standard variance\n        const variance = count > 1 ? Math.sqrt(sum2 / (count - 1)) : 0;\n\n        // compute the median value\n        values.sort();\n        const middle = count / 2;\n        const median = (values[Math.floor(middle)] + values[Math.ceil(middle)]) / 2;\n\n        const results = {\n            min,\n            max,\n            sum,\n            count,\n            average,\n            median,\n            variance\n        };\n\n        if (decimals) {\n            _.forEach(results, (value, key) => {\n                results[key] = fixedDecimals(value, decimals);\n            });\n        }\n\n        results.values = list;\n        return results;\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016-2021 (original work) Open Assessment Technologies SA ;\n */\ndefine('taoClientDiagnostic/tools/getConfig',['lodash'], function(_) {\n    'use strict';\n\n    /**\n     * Gets a config set\n     * @param {object} [config]\n     * @param {object} [defaults]\n     * @returns {object}\n     */\n    return function getConfig(config, defaults) {\n        return _(config || {})\n            .omit(value => value === null || typeof value === 'undefined')\n            .defaults(defaults || {})\n            .value();\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017-2021 (original work) Open Assessment Technologies SA ;\n */\ndefine('taoClientDiagnostic/tools/getLabels',[],function() {\n    'use strict';\n\n    /**\n     * Gets the list of messages related to a particular level.\n     * The level is provided as a numeric value, starting from 1.\n     * @param {Array|object} messages - The list of messages for all levels.\n     *                                  If only one object is provided is will be wrapped into an array\n     * @param {number|string} level - The level for which filter the messages.\n     *                                It should be comprised within the available indexes.\n     *                                Higher levels will be reduced to the higher available,\n     *                                lower levels will be increased to the lowest.\n     * @returns {object}\n     */\n    return function getLabels(messages, level) {\n        messages = messages || {};\n\n        if (!Array.isArray(messages)) {\n            messages = [messages];\n        }\n\n        // Compute the level value that targets which list of labels to use.\n        // It should be comprised within the available indexes.\n        // Higher levels will be reduced to the higher available, lower levels will be increased to the lowest.\n        level = Math.min(Math.max(parseInt(level, 10) || 0, 1), messages.length || 1) - 1;\n\n        return messages[level] || {};\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016-2021 (original work) Open Assessment Technologies SA ;\n */\ndefine('taoClientDiagnostic/tools/getStatus',['lodash'], function(_) {\n    'use strict';\n\n    /**\n     * Gets the correct status message for a given percentage from a list of thresholds.\n     * @param {number|string} percentage - The actual percentage. Must be comprised between 0 and 100.\n     *                                     Other values will be adjusted to fit the interval.\n     * @param {Array|object} [thresholds] - A list of descriptors for each thresholds.\n     *                                      A threshold field must be provided for each.\n     * @param {object} [opts]\n     * @param {object} [minimumGlobalPercentage] - lowest value that will be used in the global score computation\n     * @returns {object} Returns the corresponding threshold, or an empty object if none match.\n     */\n    return function getStatus(percentage, thresholds, opts) {\n        const options = opts || {};\n        const testPercentage = Math.max(0, Math.min(100, Math.round(parseInt(percentage, 10) || 0)));\n        const globalPercentage = options.minimumGlobalPercentage\n            ? Math.max(testPercentage, options.minimumGlobalPercentage)\n            : testPercentage;\n\n        // need a structure compatible with the handlebars template\n        const status = {\n            // the percentage is between 0 and 100 and obviously must be a number\n            percentage: testPercentage,\n            globalPercentage: globalPercentage,\n            quality: {}\n        };\n\n        // grab a feedback related to the percentage in the thresholds list\n        if (thresholds) {\n            if (!Array.isArray(thresholds)) {\n                thresholds = [thresholds];\n            }\n\n            let feedback;\n            const len = thresholds.length;\n            for (let i = 0; i < len; i++) {\n                const step = thresholds[i];\n                if (step && (!step.threshold || status.percentage >= step.threshold)) {\n                    feedback = step;\n                } else {\n                    break;\n                }\n            }\n\n            if (feedback) {\n                status.feedback = _.clone(feedback);\n            }\n        }\n\n        return status;\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015-2021 (original work) Open Assessment Technologies SA ;\n */\ndefine('taoClientDiagnostic/tools/performances/tester',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'async',\n    'context',\n    'helpers',\n    'taoClientDiagnostic/tools/stats',\n    'taoQtiItem/qtiItem/core/Loader',\n    'taoQtiItem/qtiCommonRenderer/renderers/Renderer',\n    'taoClientDiagnostic/tools/getConfig',\n    'taoClientDiagnostic/tools/getLabels',\n    'taoClientDiagnostic/tools/getStatus'\n], function($, _, __, async, context, helpers, stats, Loader, Renderer, getConfig, getLabels, getStatus) {\n    'use strict';\n\n    /**\n     * Duration of one second (in milliseconds)\n     * @type {number}\n     * @private\n     */\n    const _second = 1000;\n\n    /**\n     * Default timeout duration\n     * @type {number}\n     * @private\n     */\n    const _defaultTimeout = 30 * _second;\n\n    /**\n     * Default number of renderings by samples\n     * @type {number}\n     * @private\n     */\n    const _defaultOccurrencesCount = 10;\n\n    /**\n     * List of default samples\n     * @type {Array}\n     * @private\n     */\n    const _defaultSamples = [\n        'taoClientDiagnostic/tools/performances/data/sample1/',\n        'taoClientDiagnostic/tools/performances/data/sample2/',\n        'taoClientDiagnostic/tools/performances/data/sample3/'\n    ];\n\n    /**\n     * Default values for the performances tester\n     * @type {object}\n     * @private\n     */\n    const _defaults = {\n        id: 'performances',\n\n        // The threshold for optimal performances\n        optimal: 0.025,\n\n        // The threshold for minimal performances\n        threshold: 0.25\n    };\n\n    /**\n     * A list of thresholds for performances check\n     * @type {Array}\n     * @private\n     */\n    const _thresholds = [\n        {\n            threshold: 0,\n            message: __('Very slow performances'),\n            type: 'error'\n        },\n        {\n            threshold: 33,\n            message: __('Average performances'),\n            type: 'warning'\n        },\n        {\n            threshold: 66,\n            message: __('Good performances'),\n            type: 'success'\n        }\n    ];\n\n    /**\n     * List of translated texts per level.\n     * The level is provided through the config as a numeric value, starting from 1.\n     * @type {object}\n     * @private\n     */\n    const _messages = [\n        // level 1\n        {\n            title: __('Workstation performances'),\n            status: __('Checking the performances...'),\n            performancesMin: __('Minimum rendering time'),\n            performancesMax: __('Maximum rendering time'),\n            performancesAverage: __('Average rendering time')\n        }\n    ];\n\n    /**\n     * Base text used to build sample identifiers\n     * @type {string}\n     * @private\n     */\n    const _sampleBaseId = 'sample';\n\n    /**\n     * Loads a page inside a div and compute the time to load\n     * @param {object} data The descriptor of the page to load\n     * @param {Function} done A callback function called to provide the result\n     * @private\n     */\n    function loadItem(data, done) {\n        //item location config\n        const qtiJsonFile = `${data.url}qti.json`;\n        const urlTokens = data.url.split('/');\n        const extension = urlTokens[0];\n        const fullpath = require.s.contexts._.config.paths[extension];\n        const baseUrl = data.url.replace(extension, fullpath);\n        const loader = new Loader();\n        const renderer = new Renderer({\n            baseUrl: baseUrl // compatibility mode for legacy installations\n        });\n\n        // check needed by compatibility mode for legacy installations\n        if (renderer.getAssetManager) {\n            renderer.getAssetManager().setData('baseUrl', baseUrl);\n        }\n\n        require([`json!${qtiJsonFile}`], function(itemData) {\n            loader.loadItemData(itemData, function(item) {\n                renderer.load(function() {\n                    //start right before rendering\n                    const start = window.performance.now();\n\n                    //set renderer\n                    item.setRenderer(this);\n\n                    //render markup\n                    const $container = $('<div>').appendTo('body');\n                    $container.append(item.render());\n\n                    //execute javascript\n                    item.postRender();\n\n                    //remove item\n                    $container.remove();\n\n                    //done\n                    const end = window.performance.now();\n\n                    const duration = (end - start) / _second;\n\n                    const result = {\n                        id: data.id,\n                        url: data.url,\n                        duration: duration\n                    };\n\n                    done(null, result);\n                }, this.getLoadedClasses());\n            });\n        });\n    }\n\n    /**\n     * Performs a browser performances test by running a heavy page\n     *\n     * @param {object} config - Some optional configs\n     * @param {string} [config.id] - The identifier of the test\n     * @param {number} [config.optimal] - The threshold for optimal performances\n     * @param {number} [config.threshold] - The threshold for minimal performances\n     * @param {string} [config.level] - The intensity level of the test. It will aim which messages list to use.\n     * @returns {object}\n     */\n    return function performancesTester(config) {\n        const initConfig = getConfig(config, _defaults);\n        const labels = getLabels(_messages, initConfig.level);\n        let idx = 0;\n        const _samples = _.map((!_.isEmpty(initConfig.samples) && initConfig.samples) || _defaultSamples, sample => {\n            idx++;\n            return {\n                id: _sampleBaseId + idx,\n                url: sample,\n                timeout: initConfig.timeout * 1000 || _defaultTimeout,\n                nb: initConfig.occurrences || _defaultOccurrencesCount\n            };\n        });\n\n        // add one occurrence on the first sample to obfuscate the time needed to load the runner\n        _samples[0].nb++;\n\n        return {\n            /**\n             * Performs a performances test, then call a function to provide the result\n             * @param {Function} done\n             */\n            start(done) {\n                const tests = [];\n\n                _.forEach(_samples, data => {\n                    const cb = _.partial(loadItem, data);\n                    let iterations = data.nb || 1;\n                    while (iterations--) {\n                        tests.push(cb);\n                    }\n                });\n\n                async.series(tests, (err, measures) => {\n                    const decimals = 2;\n\n                    if (err && !measures.length) {\n                        //something went wrong\n                        throw err;\n                    }\n\n                    // remove the first result to obfuscate the time needed to load the runner\n                    measures.shift();\n\n                    const results = stats(measures, 'duration', decimals);\n                    const status = this.getFeedback(results.average);\n                    const summary = this.getSummary(results);\n\n                    done(status, summary, results);\n                });\n            },\n\n            /**\n             * Gets the labels loaded for the tester\n             * @returns {object}\n             */\n            get labels() {\n                return labels;\n            },\n\n            /**\n             * Builds the results summary\n             * @param {object} results\n             * @returns {object}\n             */\n            getSummary(results) {\n                return {\n                    performancesMin: { message: labels.performancesMin, value: `${results.min} s` },\n                    performancesMax: { message: labels.performancesMax, value: `${results.max} s` },\n                    performancesAverage: { message: labels.performancesAverage, value: `${results.average} s` }\n                };\n            },\n\n            /**\n             * Gets the feedback status for the provided result value\n             * @param {Number} result\n             * @returns {object}\n             */\n            getFeedback(result) {\n                const optimal = initConfig.optimal;\n                const range = Math.abs(optimal - initConfig.threshold);\n                const status = getStatus(((range + optimal - result) / range) * 100, _thresholds);\n\n                status.title = labels.title;\n                status.id = initConfig.id;\n                return status;\n            }\n        };\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015-2021 (original work) Open Assessment Technologies SA ;\n */\ndefine('taoClientDiagnostic/tools/bandwidth/tester',[\n    'lodash',\n    'i18n',\n    'async',\n    'context',\n    'taoClientDiagnostic/tools/getConfig',\n    'taoClientDiagnostic/tools/getLabels',\n    'taoClientDiagnostic/tools/stats',\n    'taoClientDiagnostic/tools/fixedDecimals',\n    'taoClientDiagnostic/tools/getStatus'\n], function(_, __, async, context, getConfig, getLabels, stats, fixedDecimals, getStatus) {\n    'use strict';\n\n    /**\n     * A binary kilo bytes (KiB)\n     * @type {number}\n     * @private\n     */\n    const _kilo = 1024;\n\n    /**\n     * A binary mega bytes (MiB)\n     * @type {number}\n     * @private\n     */\n    const _mega = _kilo * _kilo;\n\n    /**\n     * Duration of one second (in milliseconds)\n     * @type {number}\n     * @private\n     */\n    const _second = 1000;\n\n    /**\n     * A list of thresholds for bandwidth check\n     * @type {Array}\n     * @private\n     */\n    const _thresholds = [\n        {\n            threshold: 0,\n            message: __('Low bandwidth'),\n            type: 'error'\n        },\n        {\n            threshold: 33,\n            message: __('Average bandwidth'),\n            type: 'warning'\n        },\n        {\n            threshold: 66,\n            message: __('Good bandwidth'),\n            type: 'success'\n        }\n    ];\n\n    /**\n     * Default values for the bandwidth tester\n     * @type {object}\n     * @private\n     */\n    const _defaults = {\n        id: 'bandwidth',\n\n        // The typical bandwidth needed for a test taker (Mbps)\n        unit: 0.16,\n\n        // The thresholds for optimal bandwidth\n        ideal: 45,\n\n        // Maximum number of test takers to display\n        max: 100,\n\n        // Lowest value that will be used in the global score computation\n        minimumGlobalPercentage: false,\n\n        // A list of thresholds for bandwidth check\n        feedbackThresholds: _thresholds,\n\n        fallbackThreshold: 0.2\n    };\n\n    /**\n     * List of descriptors defining the data sets to download.\n     * - file : path of the file containing the test data\n     * - size : the given size of the file\n     * - timeout : the timeout for the download\n     * - threshold : a bandwidth threshold above which the data set can be downloaded to evaluate a more accurate value\n     * - nb : number of download iterations\n     * @type {object}\n     * @private\n     */\n    const _downloadData = {\n        '10KB': {\n            id: '10KB',\n            file: 'data/bin10KB.data',\n            size: 10 * _kilo,\n            timeout: _second,\n            threshold: 0,\n            nb: 10\n        },\n        '100KB': {\n            id: '100KB',\n            file: 'data/bin100KB.data',\n            size: 100 * _kilo,\n            timeout: 2 * _second,\n            threshold: 0,\n            nb: 5\n        },\n        '1MB': {\n            id: '1MB',\n            file: 'data/bin1MB.data',\n            size: _mega,\n            timeout: 20 * _second,\n            threshold: 0,\n            nb: 3\n        }\n    };\n\n    /**\n     * List of translated texts per level.\n     * The level is provided through the config as a numeric value, starting from 1.\n     * @type {object[]}\n     * @private\n     */\n    const _messages = [\n        // level 1\n        {\n            title: __('Bandwidth'),\n            status: __('Checking the bandwidth...'),\n            legend: __('Number of simultaneous test takers the connection can handle'),\n            bandwidthMin: __('Minimum bandwidth'),\n            bandwidthMax: __('Maximum bandwidth'),\n            bandwidthAverage: __('Average bandwidth')\n        },\n        // level 2\n        {\n            title: __('Media intensive bandwidth'),\n            status: __('Checking the media intensive bandwidth...'),\n            legend: __('Number of simultaneous test takers the connection can handle with media intensive'),\n            bandwidthMin: __('Minimum intensive bandwidth'),\n            bandwidthMax: __('Maximum intensive bandwidth'),\n            bandwidthAverage: __('Average intensive bandwidth')\n        }\n    ];\n\n    /**\n     * Download a data set as described by the provided descriptor and compute the duration.\n     * @param {object} data The data set descriptor to use for download\n     * @param {Function} cb A callback function called at the end of the download.\n     * This callback is also called if a timeout breaks the download;\n     * @private\n     */\n    function download(data, cb) {\n        if (data.threshold && this.bandwidth < data.threshold) {\n            return cb('threshold');\n        }\n\n        const start = window.performance.now();\n        const url = `${context['root_url']}taoClientDiagnostic/views/js/tools/bandwidth/${data.file}?${Date.now()}`;\n        const timeoutId = window.setTimeout(cb, data.timeout, 'timeout');\n        const request = new XMLHttpRequest();\n        request.open('GET', url, true);\n        request.setRequestHeader('Accept', 'application/octet-stream');\n\n        request.onload = () => {\n            const end = window.performance.now();\n            clearTimeout(timeoutId);\n\n            const duration = end - start;\n            const bytes = data.size;\n            const seconds = duration / _second;\n\n            // speed in Mbps\n            const speed = (bytes * 8) / seconds / _mega;\n\n            this.bandwidth = Math.max(this.bandwidth, speed);\n\n            return cb(null, {\n                id: data.id,\n                file: data.file,\n                size: data.size,\n                duration,\n                speed\n            });\n        };\n        request.onerror = err => {\n            clearTimeout(timeoutId);\n            cb(err);\n        };\n\n        request.onreadystatechange = () => {\n            if (request.readyState === 4 && request.status !== 200) {\n                clearTimeout(timeoutId);\n                cb(request.status);\n            }\n        };\n\n        request.send();\n    }\n\n    /**\n     * Performs a bandwidth test by downloading a bunch of data sets with different sizes\n     *\n     * @param {object} config - Some optional configs\n     * @param {string} [config.id] - The identifier of the test\n     * @param {number} [config.unit] - The typical bandwidth needed for a test taker (Mbps)\n     * @param {number} [config.ideal] - The thresholds for optimal bandwidth\n     * @param {number} [config.max] - Maximum number of test takers to display\n     * @param {string} [config.level] - The intensity level of the test. It will aim which messages list to use.\n     * @returns {object}\n     */\n    return function bandwidthTester(config) {\n        const initConfig = getConfig(config, _defaults);\n        const labels = getLabels(_messages, initConfig.level);\n\n        // override the feedback thresholds given by the config in case it is an empty array\n        if (_.isArray(initConfig.feedbackThresholds) && !initConfig.feedbackThresholds.length) {\n            initConfig.feedbackThresholds = _thresholds;\n        }\n\n        return {\n            /**\n             * Performs a bandwidth test, then call a function to provide the result\n             * @param {Function} done\n             */\n            start(done) {\n                const tests = [];\n\n                _.forEach(_downloadData, data => {\n                    const cb = download.bind(this, data);\n                    let iterations = data.nb || 1;\n                    while (iterations--) {\n                        tests.push(cb);\n                    }\n                });\n\n                this.bandwidth = 0;\n\n                async.series(tests, (err, measures) => {\n                    let duration = 0;\n                    let size = 0;\n                    const decimals = 2;\n                    const resultsBySize = {};\n\n                    function getValue(value) {\n                        let speed = 0;\n\n                        if (value) {\n                            duration += value.duration;\n                            size += value.size;\n\n                            speed = value.speed;\n                            value.speed = fixedDecimals(speed, decimals);\n                        }\n\n                        return speed;\n                    }\n\n                    if (err && !measures.length) {\n                        //something went wrong\n                        throw err;\n                    }\n                    const results = stats(measures, getValue, decimals);\n\n                    _.forEach(_downloadData, (data, key) => {\n                        resultsBySize[key] = stats(\n                            _.filter(measures, o => o.id === key),\n                            getValue,\n                            decimals\n                        );\n                    });\n\n                    results.duration = fixedDecimals(duration / _second, decimals);\n                    results.size = size;\n\n                    const summary = this.getSummary(results);\n                    const status = this.getFeedback(results, resultsBySize);\n\n                    done(status, summary, results);\n                });\n            },\n\n            /**\n             * Gets the labels loaded for the tester\n             * @returns {object}\n             */\n            get labels() {\n                return labels;\n            },\n\n            /**\n             * Builds the results summary\n             * @param {object} results\n             * @returns {object}\n             */\n            getSummary(results) {\n                return {\n                    bandwidthMin: { message: labels.bandwidthMin, value: results.min + ' Mbps' },\n                    bandwidthMax: { message: labels.bandwidthMax, value: results.max + ' Mbps' },\n                    bandwidthAverage: { message: labels.bandwidthAverage, value: results.average + ' Mbps' }\n                };\n            },\n\n            /**\n             * Gets the feedback status for the provided result value\n             * @param {object} result\n             * @param {number} result.max\n             * @param {number} result.min\n             * @param {number} result.average\n             * @param {object} resultsBySize - result statistics grouped by size\n             * @returns {object}\n             */\n            getFeedback(result, resultsBySize) {\n                const avgResult = result.average;\n                const bandwidthUnit = initConfig.unit;\n                const threshold = initConfig.ideal;\n                const maxTestTakers = initConfig.max;\n                const max = threshold * bandwidthUnit;\n                const getStatusOptions = initConfig.minimumGlobalPercentage\n                    ? { minimumGlobalPercentage: initConfig.minimumGlobalPercentage }\n                    : {};\n                const baseBandwidth = avgResult;\n                let stable = true;\n\n                _.forEach(resultsBySize, resultBySize => {\n                    if (resultBySize.min / resultBySize.average < initConfig.fallbackThreshold) {\n                        stable = false;\n                    }\n                });\n\n                const status = getStatus((baseBandwidth / max) * 100, initConfig.feedbackThresholds, getStatusOptions);\n\n                let nb = Math.floor(baseBandwidth / bandwidthUnit);\n\n                if (nb > maxTestTakers) {\n                    nb = '>' + maxTestTakers;\n                }\n\n                status.id = initConfig.id;\n                status.title = labels.title;\n                status.feedback.legend = labels.legend;\n                status.quality.label = nb;\n\n                if (!stable) {\n                    status.feedback.type = 'warning';\n                    status.feedback.message = __(\n                        'Unstable bandwidth, temporary fluctuations in connection speed may affect test taker experience.'\n                    );\n                    status.feedback.legend = __('Simultaneous test takers under normal connection conditions.');\n                }\n\n                if (nb.toString().length > 2) {\n                    status.quality.wide = true;\n                }\n\n                return status;\n            }\n        };\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016-2021 (original work) Open Assessment Technologies SA ;\n */\ndefine('taoClientDiagnostic/tools/upload/tester',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'async',\n    'util/url',\n    'taoClientDiagnostic/tools/getConfig',\n    'taoClientDiagnostic/tools/getLabels',\n    'taoClientDiagnostic/tools/getStatus'\n], function($, _, __, async, urlHelper, getConfig, getLabels, getStatus) {\n    'use strict';\n\n    /**\n     * A binary kilo bytes (KiB)\n     * @type {number}\n     * @private\n     */\n    const _kilo = 1024;\n\n    /**\n     * A binary mega bytes (MiB)\n     * @type {number}\n     * @private\n     */\n    const _mega = _kilo * _kilo;\n\n    /**\n     * Result of diagnostic\n     * @type {Array}\n     * @private\n     */\n    let data = [];\n\n    /**\n     * Default values for the upload speed tester\n     * @type {object}\n     * @private\n     */\n    const _defaults = {\n        id: 'upload',\n\n        // Size of data to sent to server during speed test in bytes\n        size: _mega,\n\n        // Optimal speed in bytes per second\n        optimal: _mega\n    };\n\n    /**\n     * A list of thresholds for bandwidth check\n     * @type {Array}\n     * @private\n     */\n    const _thresholds = [\n        {\n            threshold: 0,\n            message: __('Low upload speed'),\n            type: 'error'\n        },\n        {\n            threshold: 33,\n            message: __('Average upload speed'),\n            type: 'warning'\n        },\n        {\n            threshold: 66,\n            message: __('Good upload speed'),\n            type: 'success'\n        }\n    ];\n\n    /**\n     * List of translated texts per level.\n     * The level is provided through the config as a numeric value, starting from 1.\n     * @type {object}\n     * @private\n     */\n    const _messages = [\n        // level 1\n        {\n            title: __('Upload speed'),\n            status: __('Checking upload speed...'),\n            uploadAvg: __('Average upload speed'),\n            uploadMax: __('Max upload speed')\n        }\n    ];\n\n    /**\n     * Generate random string of given length\n     * @param {number} length\n     */\n    function generateStr(length) {\n        let text = '';\n        const possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\n        for (let i = 0; i < length; i++) {\n            text += possible.charAt(Math.floor(Math.random() * possible.length));\n        }\n\n        return text;\n    }\n\n    /**\n     * Upload generated string to check upload speed.\n     * @param {number} size of string to upload in bytes\n     * @return {object} jqXHR\n     */\n    function upload(size) {\n        const url = urlHelper.route('upload', 'CompatibilityChecker', 'taoClientDiagnostic', { cache: Date.now() });\n        const str = generateStr(size);\n        data = [];\n\n        return $.ajax({\n            url: url,\n            type: 'POST',\n            data: {\n                upload: str\n            },\n            xhr: () => {\n                const xhr = new window.XMLHttpRequest();\n                const startTime = Date.now();\n                // Upload progress\n                xhr.upload.addEventListener(\n                    'progress',\n                    evt => {\n                        if (evt.lengthComputable) {\n                            const passedTime = Date.now() - startTime;\n                            data.push({\n                                time: passedTime,\n                                loaded: evt.loaded,\n                                speed: (evt.loaded * 8) / _mega / (passedTime / 1000)\n                            });\n                        }\n                    },\n                    false\n                );\n\n                return xhr;\n            }\n        });\n    }\n\n    /**\n     * Performs a upload speed test\n     * @param {object} config - Some optional configs\n     * @param {string} [config.id] - The identifier of the test\n     * @param {number} [config.size] - Size of data to sent to server during speed test in bytes\n     * @param {number} [config.optimal] - Optimal speed in bytes per second\n     * @param {string} [config.level] - The intensity level of the test. It will aim which messages list to use.\n     * @returns {object}\n     */\n    return function uploadTester(config) {\n        const initConfig = getConfig(config, _defaults);\n        const labels = getLabels(_messages, initConfig.level);\n\n        return {\n            /**\n             * Performs upload speed test, then call a function to provide the result\n             * @param {Function} done\n             */\n            start(done) {\n                upload(parseInt(initConfig.size, 10)).then(() => {\n                    let totalSpeed = 0;\n                    let maxSpeed = 0;\n\n                    _.forEach(data, val => {\n                        totalSpeed += val.speed;\n                        if (maxSpeed < val.speed) {\n                            maxSpeed = Math.round(val.speed * 100) / 100;\n                        }\n                    });\n                    const avgSpeed = Math.round((totalSpeed / data.length) * 100) / 100;\n                    const results = {\n                        max: maxSpeed,\n                        avg: avgSpeed,\n                        type: 'upload'\n                    };\n\n                    const status = this.getFeedback(avgSpeed);\n                    const summary = this.getSummary(results);\n\n                    done(status, summary, results);\n                });\n            },\n\n            /**\n             * Gets the labels loaded for the tester\n             * @returns {object}\n             */\n            get labels() {\n                return labels;\n            },\n\n            /**\n             * Builds the results summary\n             * @param {object} results\n             * @returns {object}\n             */\n            getSummary(results) {\n                return {\n                    uploadAvg: { message: labels.uploadAvg, value: `${results.avg} Mbps` },\n                    uploadMax: { message: labels.uploadMax, value: `${results.max} Mbps` }\n                };\n            },\n\n            /**\n             * Gets the feedback status for the provided result value\n             * @param {number} result\n             * @returns {object}\n             */\n            getFeedback(result) {\n                const optimal = initConfig.optimal / _mega;\n                const status = getStatus((100 / optimal) * result, _thresholds);\n\n                status.id = initConfig.id;\n                status.title = labels.title;\n\n                return status;\n            }\n        };\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016-2021 (original work) Open Assessment Technologies SA ;\n */\ndefine('taoClientDiagnostic/tools/getPlatformInfo',['core/request', 'util/url', 'taoClientDiagnostic/tools/getConfig'], function(request, urlHelper, getConfig) {\n    'use strict';\n\n    /**\n     * Some default values\n     * @type {object}\n     * @private\n     */\n    const defaultConfig = {\n        browserVersionAction: 'whichBrowser',\n        browserVersionController: 'CompatibilityChecker',\n        browserVersionExtension: 'taoClientDiagnostic'\n    };\n\n    /**\n     * Gets the URL of the platform tester\n     * @param {Window} win\n     * @param {string} action\n     * @param {string} controller\n     * @param {string} extension\n     * @returns {string}\n     * @private\n     */\n    function getTesterUrl(win, action, controller, extension) {\n        const document = win.document;\n        const navigator = win.navigator;\n        const screen = win.screen;\n        const params = {};\n        let e = 0;\n        let f = 0;\n\n        // append the browser user agent\n        params.ua = navigator.userAgent;\n\n        // detect browser family\n        e |= win.ActiveXObject ? 1 : 0;\n        e |= win.opera ? 2 : 0;\n        e |= win.chrome ? 4 : 0;\n        e |= 'getBoxObjectFor' in document || 'mozInnerScreenX' in win ? 8 : 0;\n        e |=\n            'WebKitCSSMatrix' in win || 'WebKitPoint' in win || 'webkitStorageInfo' in win || 'webkitURL' in win\n                ? 16\n                : 0;\n        e |= e & 16 && {}.toString.toString().indexOf('\\n') === -1 ? 32 : 0;\n        params.e = e;\n\n        // gather info about browser functionality\n        f |= 'sandbox' in document.createElement('iframe') ? 1 : 0;\n        f |= 'WebSocket' in win ? 2 : 0;\n        f |= win.Worker ? 4 : 0;\n        f |= win.applicationCache ? 8 : 0;\n        f |= win.history && win.history.pushState ? 16 : 0;\n        f |= document.documentElement.webkitRequestFullScreen ? 32 : 0;\n        f |= 'FileReader' in win ? 64 : 0;\n        params.f = f;\n\n        // append a unique ID\n        params.r = Math.random()\n            .toString(36)\n            .substring(7);\n\n        // get the screen size\n        params.w = screen.width;\n        params.h = screen.height;\n\n        return urlHelper.route(action, controller, extension, params);\n    }\n\n    /**\n     * Check the user browser and os.\n     *\n     * This helper performs a server request to gather information about the user browser and os.\n     * @param {Window} window - Need an access to the window object\n     * @param {object} config\n     * @param {string} config.browserVersionAction - The name of the action to call to get the browser checker\n     * @param {string} config.browserVersionController - The name of the controller to call to get the browser checker\n     * @param {string} config.browserVersionExtension - The name of the extension containing the controller to call to get the browser checker\n     * @returns {Promise}\n     */\n    return function getPlatformInfo(win, config) {\n        config = getConfig(config, defaultConfig);\n\n        const url = getTesterUrl(\n            win,\n            config.browserVersionAction,\n            config.browserVersionController,\n            config.browserVersionExtension\n        );\n\n        return request({ url, noToken: true });\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016-2021 (original work) Open Assessment Technologies SA ;\n */\ndefine('taoClientDiagnostic/tools/browser/tester',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'util/url',\n    'core/logger',\n    'core/request',\n    'taoClientDiagnostic/tools/getConfig',\n    'taoClientDiagnostic/tools/getLabels',\n    'taoClientDiagnostic/tools/getPlatformInfo',\n    'taoClientDiagnostic/tools/getStatus'\n], function($, _, __, urlHelper, loggerFactory, request, getConfig, getLabels, getPlatformInfo, getStatus) {\n    'use strict';\n\n    /**\n     * @type {logger}\n     * @private\n     */\n    const logger = loggerFactory('taoClientDiagnostic/browser');\n\n    /**\n     * Some default values\n     * @type {object}\n     * @private\n     */\n    const _defaults = {\n        id: 'browser',\n        browserVersionAction: 'whichBrowser',\n        browserVersionController: 'CompatibilityChecker',\n        browserVersionExtension: 'taoClientDiagnostic',\n        action: 'check',\n        controller: 'DiagnosticChecker',\n        browserslistUrl: 'https://oat-sa.github.io/browserslist-app-tao/api.json'\n    };\n\n    /**\n     * Placeholder variables for custom messages\n     * @type {object}\n     * @private\n     */\n    const _placeHolders = {\n        CURRENT_BROWSER: '%CURRENT_BROWSER%',\n        CURRENT_OS: '%CURRENT_OS%'\n    };\n\n    /**\n     * List of translated texts per level.\n     * The level is provided through the config as a numeric value, starting from 1.\n     * @type {object}\n     * @private\n     */\n    const _messages = [\n        // level 1\n        {\n            title: __('Operating system and web browser'),\n            status: __('Checking the browser...'),\n            browser: __('Web browser'),\n            os: __('Operating system')\n        }\n    ];\n\n    /**\n     * Fallback name to recover from connectivity error\n     * @param {string}\n     * @private\n     */\n    const unknown = __('Unknown');\n\n    /**\n     * Performs a browser support test\n     *\n     * @param {object} config - Some optional configs\n     * @param {string} [config.id] - The identifier of the test\n     * @param {string} [config.action] - The name of the action to call to get the browser checker\n     * @param {string} [config.controller] - The name of the controller to call to get the browser checker\n     * @param {string} [config.extension] - The name of the extension containing the controller to call to get the browser checker\n     * @param {string} [config.level] - The intensity level of the test. It will aim which messages list to use.\n     * @returns {object}\n     */\n    return function browserTester(config) {\n        const initConfig = getConfig(config, _defaults);\n        const labels = getLabels(_messages, initConfig.level);\n\n        /**\n         * Fetches the list of fully supported browsers\n         * @returns {Promise<Array>}\n         * @private\n         */\n        const fetchBrowserList = () => request({ url: initConfig.browserslistUrl, noToken: true }).catch(() => []);\n\n        /**\n         * Checks the current browser against the list of fully supported browsers\n         * @param platformInfo\n         * @returns {Promise<boolean>}\n         * @private\n         */\n        function checkBrowserSupport(platformInfo) {\n            const currentDevice = platformInfo.isMobile ? 'mobile' : 'desktop';\n            const currentOS = platformInfo.os.toLowerCase();\n            const currentBrowser = platformInfo.browser.toLowerCase();\n            const currentVersion = platformInfo.browserVersion;\n            return fetchBrowserList().then(list =>\n                list.some(entry => {\n                    const { browser, device, os, versions } = entry;\n\n                    if (currentDevice !== device) {\n                        return false;\n                    }\n\n                    if (os && os.toLowerCase() !== currentOS) {\n                        return false;\n                    }\n\n                    if (browser.toLowerCase() !== currentBrowser) {\n                        return false;\n                    }\n\n                    // Using lodash because of IE support.\n                    // Some useful traversal algorithms are needed and they don't have polyfill in our bundles.\n                    // The versions come with an inconsistent format and they need to be processed upfront.\n                    return _(versions)\n                        .map(version => version.split('-'))\n                        .flatten()\n                        .value()\n                        .some(version => currentVersion.localeCompare(version, void 0, { numeric: true }) >= 0);\n                }, {})\n            );\n        }\n\n        return {\n            /**\n             * Performs a browser support test, then call a function to provide the result\n             * @param {Function} done\n             */\n            start(done) {\n                getPlatformInfo(window, initConfig)\n                    .catch(err => {\n                        logger.error(err);\n                        return {\n                            browser: unknown,\n                            browserVersion: '',\n                            os: unknown,\n                            osVersion: '',\n                            isMobile: false\n                        };\n                    })\n                    .then(platformInfo =>\n                        checkBrowserSupport(platformInfo).then(browserSupported =>\n                            Object.assign(platformInfo, { browserSupported })\n                        )\n                    )\n                    .then(platformInfo => {\n                        request({\n                            url: urlHelper.route(initConfig.action, initConfig.controller, initConfig.extension),\n                            data: platformInfo,\n                            method: 'POST',\n                            noToken: true\n                        })\n                            .catch(() => {\n                                return {\n                                    success: false,\n                                    type: 'error',\n                                    message: __('Unable to validate the data as the server did not respond in time.')\n                                };\n                            })\n                            .then(data => {\n                                const percentage = 'success' === data.type ? 100 : 'warning' === data.type ? 33 : 0;\n                                const status = this.getFeedback(percentage, data);\n                                const summary = this.getSummary(platformInfo);\n\n                                status.customMsgRenderer = customMsg => {\n                                    return (customMsg || '')\n                                        .replace(_placeHolders.CURRENT_BROWSER, summary.browser.value)\n                                        .replace(_placeHolders.CURRENT_OS, summary.os.value);\n                                };\n\n                                done(status, summary, platformInfo);\n                            });\n                    });\n            },\n\n            /**\n             * Gets the labels loaded for the tester\n             * @returns {object}\n             */\n            get labels() {\n                return labels;\n            },\n\n            /**\n             * Builds the results summary\n             * @param {object} results\n             * @returns {object}\n             */\n            getSummary(results) {\n                const currentBrowser = `${results.browser} ${results.browserVersion}`;\n                const currentOs = `${results.os} ${results.osVersion}`;\n                return {\n                    browser: {\n                        message: labels.browser,\n                        value: currentBrowser\n                    },\n                    os: {\n                        message: labels.os,\n                        value: currentOs\n                    }\n                };\n            },\n\n            /**\n             * Gets the feedback status for the provided result value\n             * @param {number} result\n             * @param {object} data\n             * @returns {object}\n             */\n            getFeedback(result, data) {\n                const status = getStatus(result, data);\n\n                status.id = initConfig.id;\n                status.title = labels.title;\n\n                return status;\n            }\n        };\n    };\n});\n\n","\ndefine('tpl!taoClientDiagnostic/tools/diagnostic/tpl/main', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing, self=this;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"<p>\";\n  if (helper = helpers.header) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.header); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</p>\";\n  return buffer;\n  }\n\nfunction program3(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"<p>\";\n  if (helper = helpers.info) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.info); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</p>\";\n  return buffer;\n  }\n\nfunction program5(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"<p>\";\n  if (helper = helpers.setup) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.setup); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</p>\";\n  return buffer;\n  }\n\nfunction program7(depth0,data) {\n  \n  var buffer = \"\", helper, options;\n  buffer += \"\\n        <p>\\n            <label for=\\\"school_id\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"School ID:\", options) : helperMissing.call(depth0, \"__\", \"School ID:\", options)))\n    + \"</label>\\n            <input type=\\\"text\\\" data-control=\\\"school_id\\\" id=\\\"school_id\\\" name=\\\"school_id\\\" maxlength=\\\"255\\\" placeholder=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"School ID\", options) : helperMissing.call(depth0, \"__\", \"School ID\", options)))\n    + \"\\\" />\\n        </p>\\n        <p>\\n            <label for=\\\"workstation\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Workstation:\", options) : helperMissing.call(depth0, \"__\", \"Workstation:\", options)))\n    + \"</label>\\n            <input type=\\\"text\\\" data-control=\\\"workstation\\\" id=\\\"workstation\\\" name=\\\"workstation\\\" maxlength=\\\"64\\\" placeholder=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Workstation name\", options) : helperMissing.call(depth0, \"__\", \"Workstation name\", options)))\n    + \"\\\" />\\n        </p>\\n        \";\n  return buffer;\n  }\n\nfunction program9(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"\\n            \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.validateSchoolName), {hash:{},inverse:self.program(12, program12, data),fn:self.program(10, program10, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n        \";\n  return buffer;\n  }\nfunction program10(depth0,data) {\n  \n  var buffer = \"\", helper, options;\n  buffer += \"\\n        <p>\\n            <label for=\\\"school_number\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"School number:\", options) : helperMissing.call(depth0, \"__\", \"School number:\", options)))\n    + \"</label>\\n            <input type=\\\"text\\\" data-control=\\\"school_number\\\" id=\\\"school_number\\\" name=\\\"school_number\\\" maxlength=\\\"10\\\" placeholder=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"School number\", options) : helperMissing.call(depth0, \"__\", \"School number\", options)))\n    + \"\\\" />\\n        </p>\\n        <p>\\n            <label for=\\\"school_pin\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"School PIN:\", options) : helperMissing.call(depth0, \"__\", \"School PIN:\", options)))\n    + \"</label>\\n            <input type=\\\"text\\\" data-control=\\\"school_pin\\\" id=\\\"school_pin\\\" name=\\\"school_pin\\\" maxlength=\\\"4\\\" placeholder=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"School PIN code (4 digits)\", options) : helperMissing.call(depth0, \"__\", \"School PIN code (4 digits)\", options)))\n    + \"\\\" />\\n        </p>\\n            \";\n  return buffer;\n  }\n\nfunction program12(depth0,data) {\n  \n  var buffer = \"\", helper, options;\n  buffer += \"\\n        <p>\\n            <label for=\\\"school_name\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"School name:\", options) : helperMissing.call(depth0, \"__\", \"School name:\", options)))\n    + \"</label>\\n            <input type=\\\"text\\\" data-control=\\\"school_name\\\" id=\\\"school_name\\\" name=\\\"school_name\\\" maxlength=\\\"255\\\" placeholder=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"School name\", options) : helperMissing.call(depth0, \"__\", \"School name\", options)))\n    + \"\\\" />\\n        </p>\\n            \";\n  return buffer;\n  }\n\n  buffer += \"<div class=\\\"diagnostics-main-area\\\">\\n\\n    <h1>\";\n  if (helper = helpers.title) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.title); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</h1>\\n\\n    <div class=\\\"intro\\\">\\n        \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.header), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n        \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.info), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n        \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.setup), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n        \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.requireSchoolId), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n        \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.requireSchoolName), {hash:{},inverse:self.noop,fn:self.program(9, program9, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n    </div>\\n\\n    <div class=\\\"clearfix\\\">\\n        <button data-action=\\\"test-launcher\\\" class=\\\"btn-info small rgt\\\">\";\n  if (helper = helpers.button) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.button); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</button>\\n    </div>\\n\\n    <ul class=\\\"plain results\\\"></ul>\\n\\n    <div class=\\\"status\\\">\\n        <h2></h2>\\n    </div>\\n\\n</div>\";\n  return buffer;\n  });\n});\n\n","\ndefine('tpl!taoClientDiagnostic/tools/diagnostic/tpl/result', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, functionType=\"function\", self=this;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", helper, options;\n  buffer += \"\\n    <div class=\\\"clearfix\\\">\\n        <button data-action=\\\"show-details\\\" class=\\\"rgt btn-info small\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Show Details\", options) : helperMissing.call(depth0, \"__\", \"Show Details\", options)))\n    + \"</button>\\n        <button data-action=\\\"hide-details\\\" class=\\\"rgt btn-info small hidden\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Hide Details\", options) : helperMissing.call(depth0, \"__\", \"Hide Details\", options)))\n    + \"</button>\\n        <div class=\\\"details hidden\\\"></div>\\n    </div>\\n    \";\n  return buffer;\n  }\n\n  buffer += \"<li data-result=\\\"\";\n  if (helper = helpers.id) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.id); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\\n    <h2>\";\n  if (helper = helpers.title) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.title); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</h2>\\n    <div class=\\\"result\\\"></div>\\n\\n    \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.details), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n</li>\";\n  return buffer;\n  });\n});\n\n","\ndefine('tpl!taoClientDiagnostic/tools/diagnostic/tpl/details', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing, self=this;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"\\n                <tr><td>\";\n  if (helper = helpers.message) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.message); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</td><td>\";\n  if (helper = helpers.value) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.value); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</td></tr>\\n            \";\n  return buffer;\n  }\n\n  buffer += \"<div class=\\\"details\\\">\\n    <h2>\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Details\", options) : helperMissing.call(depth0, \"__\", \"Details\", options)))\n    + \"</h2>\\n    <div>\\n        <table class=\\\"matrix\\\">\\n            <tbody>\\n            \";\n  stack1 = helpers.each.call(depth0, depth0, {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n            </tbody>\\n        </table>\\n    </div>\\n</div>\";\n  return buffer;\n  });\n});\n\n","\ndefine('tpl!taoClientDiagnostic/tools/diagnostic/tpl/feedback', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"<div class=\\\"legend\\\">\";\n  if (helper = helpers.legend) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.legend); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</div>\";\n  return buffer;\n  }\n\nfunction program3(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"<div class=\\\"customMsg\\\">\";\n  if (helper = helpers.customMsg) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.customMsg); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</div>\";\n  return buffer;\n  }\n\n  buffer += \"<div class=\\\"small feedback feedback-\";\n  if (helper = helpers.type) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.type); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\\n    <span class=\\\"icon icon-\";\n  if (helper = helpers.type) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.type); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\"></span>\\n    <span class=\\\"msg\\\">\";\n  if (helper = helpers.message) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.message); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</span>\\n    \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.legend), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n    \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.customMsg), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n</div>\";\n  return buffer;\n  });\n});\n\n","\ndefine('tpl!taoClientDiagnostic/tools/diagnostic/tpl/quality-bar', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\nfunction program1(depth0,data) {\n  \n  \n  return \" wide\";\n  }\n\nfunction program3(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \" title=\\\"\";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\"\";\n  return buffer;\n  }\n\n  buffer += \"<div class=\\\"quality-bar\\\">\\n    <div class=\\\"quality-indicator\";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.wide), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\\"\";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.label), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"></div>\\n</div>\";\n  return buffer;\n  });\n});\n\n","\ndefine('css!taoClientDiagnosticCss/diagnostics',[],function(){});\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016-2021 (original work) Open Assessment Technologies SA ;\n */\ndefine('taoClientDiagnostic/tools/diagnostic/diagnostic',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'async',\n    'ui/component',\n    'core/logger',\n    'core/store',\n    'core/request',\n    'core/dataProvider/request',\n    'ui/dialog/alert',\n    'ui/feedback',\n    'util/url',\n    'taoClientDiagnostic/tools/performances/tester',\n    'taoClientDiagnostic/tools/bandwidth/tester',\n    'taoClientDiagnostic/tools/upload/tester',\n    'taoClientDiagnostic/tools/browser/tester',\n    'taoClientDiagnostic/tools/getStatus',\n    'taoClientDiagnostic/tools/getConfig',\n    'tpl!taoClientDiagnostic/tools/diagnostic/tpl/main',\n    'tpl!taoClientDiagnostic/tools/diagnostic/tpl/result',\n    'tpl!taoClientDiagnostic/tools/diagnostic/tpl/details',\n    'tpl!taoClientDiagnostic/tools/diagnostic/tpl/feedback',\n    'tpl!taoClientDiagnostic/tools/diagnostic/tpl/quality-bar',\n    'css!taoClientDiagnosticCss/diagnostics'\n], function(\n    $,\n    _,\n    __,\n    async,\n    component,\n    loggerFactory,\n    store,\n    request,\n    requestData,\n    dialogAlert,\n    feedback,\n    urlHelper,\n    performancesTester,\n    bandwidthTester,\n    uploadTester,\n    browserTester,\n    getStatus,\n    getConfig,\n    mainTpl,\n    resultTpl,\n    detailsTpl,\n    feedbackTpl,\n    qualityBarTpl\n) {\n    'use strict';\n    /**\n     * @type {logger}\n     * @private\n     */\n    const logger = loggerFactory('taoClientDiagnostic/diagnostic');\n\n    /**\n     * Some default values\n     * @type {object}\n     * @private\n     */\n    const _defaults = {\n        title: __('System Compatibility'),\n        header: __(\n            'This tool will run a number of tests in order to establish how well your current environment is suitable to run the TAO platform.'\n        ),\n        info: __('Be aware that these tests will take up to several minutes.'),\n        button: __('Test system compatibility'),\n        actionStore: 'storeData',\n        actionSchool: 'schoolName',\n        controller: 'DiagnosticChecker',\n        extension: 'taoClientDiagnostic',\n        actionDropId: 'deleteId',\n        storeAllRuns: false,\n        configurableText: {}\n    };\n\n    /**\n     * A list of thresholds for summary\n     * @type {Array}\n     * @private\n     */\n    const _thresholds = [\n        {\n            threshold: 0,\n            message: __('Your system requires a compatibility update, please contact your system administrator.'),\n            type: 'error'\n        },\n        {\n            threshold: 33,\n            message: __('Your system is not optimal, please contact your system administrator.'),\n            type: 'warning'\n        },\n        {\n            threshold: 66,\n            message: __('Your system is fully compliant.'),\n            type: 'success'\n        }\n    ];\n\n    /**\n     * Defines a diagnostic tool\n     * @type {object}\n     */\n    const diagnostic = {\n        /**\n         * Updates the displayed status\n         * @param {string} status\n         * @returns {diagnostic}\n         * @private\n         */\n        changeStatus(status) {\n            if (this.is('rendered')) {\n                this.controls.$status.html(status);\n            }\n            return this;\n        },\n\n        /**\n         * Sends the detailed stats to the server\n         * @param {string} type The type of stats\n         * @param {object} data The stats details\n         * @param {Function} done A callback method called once server has responded\n         */\n        store(type, data, done) {\n            const config = this.config;\n            const url = urlHelper.route(config.actionStore, config.controller, config.extension, config.storeParams);\n\n            data = _.omit(data, 'values');\n            data.type = type;\n\n            request({ url, data, method: 'POST', noToken: true })\n                .then(done)\n                .catch(err => {\n                    logger.error(err);\n                    feedback().error(__('Unable to save the results! Please check your connection.'));\n                    done();\n                });\n        },\n\n        /**\n         * Retrieve a custom message from the config\n         * @param key\n         * @returns {*}\n         */\n        getCustomMsg(key) {\n            return this.config.configurableText[key];\n        },\n\n        /**\n         * Enrich the feedback object with a custom message if the test has failed\n         * @param {object} status - the test result\n         * @param {string} msg - the custom message\n         */\n        addCustomFeedbackMsg(status, msg) {\n            if (this.hasFailed(status) && msg) {\n                if (_.isFunction(status.customMsgRenderer)) {\n                    msg = status.customMsgRenderer(msg);\n                }\n                status.feedback = status.feedback || {};\n                status.feedback.customMsg = msg;\n            }\n        },\n\n        /**\n         * Check if a result is considered as failed\n         * @param {object} result\n         * @returns {boolean}\n         */\n        hasFailed(result) {\n            return !(result && result.feedback && result.feedback.type === 'success');\n        },\n\n        /**\n         * Add a result row\n         * @param {object} result\n         * @returns {diagnostic}\n         */\n        addResult(result) {\n            if (this.is('rendered')) {\n                // adjust the width of the displayed label, if any, to the text length\n                if (result.quality && result.quality.label && result.quality.label.toString().length > 2) {\n                    result.quality.wide = true;\n                }\n\n                // create and append the result to the displayed list\n                const $main = $(resultTpl(result));\n                const $result = $main.find('.result');\n                if (result.feedback) {\n                    $result.append($(feedbackTpl(result.feedback)));\n                }\n                if (result.quality) {\n                    $result.append($(qualityBarTpl(result.quality)));\n                }\n                if (result.details) {\n                    $main.find('.details').append($(detailsTpl(result.details)));\n                }\n\n                const $indicator = $main.find('.quality-indicator');\n                this.controls.$results.append($main);\n\n                // the result is hidden by default, show it with a little animation\n                $main.fadeIn(() => {\n                    if ($indicator.length) {\n                        $indicator.animate({\n                            left: (result.percentage * $main.outerWidth()) / 100 - $indicator.outerWidth() / 2\n                        });\n                    }\n                });\n            }\n\n            return this;\n        },\n\n        /**\n         * Removes the last results if any\n         * @returns {diagnostic}\n         */\n        cleanUp() {\n            this.controls.$results.empty();\n            return this;\n        },\n\n        /**\n         * Enables the start button\n         * @returns {diagnostic}\n         */\n        enable() {\n            this.controls.$start.removeClass('hidden');\n            return this;\n        },\n\n        /**\n         * Disables the start button\n         * @returns {diagnostic}\n         */\n        disable() {\n            this.controls.$start.addClass('hidden');\n            return this;\n        },\n\n        /**\n         * Does some preparations before starting the diagnostics\n         * @returns {diagnostic}\n         * @private\n         */\n        prepare() {\n            /**\n             * Notifies the diagnostic start\n             * @event diagnostic#start\n             */\n            this.trigger('start');\n            this.changeStatus(__('Starting...'));\n            this.setState('running', true);\n            this.setState('done', false);\n\n            // first we need a clean space to display the results, so remove the last results if any\n            this.cleanUp();\n\n            // remove the start button during the diagnostic\n            this.disable();\n\n            return this;\n        },\n\n        /**\n         * Does some post process after ending the diagnostics\n         * @returns {diagnostic}\n         * @private\n         */\n        finish() {\n            const config = this.config;\n\n            // restore the start button to allow a new diagnostic run\n            this.enable();\n\n            if (config.storeAllRuns) {\n                this.deleteIdentifier();\n            }\n\n            /**\n             * Notifies the diagnostic end\n             * @event diagnostic#end\n             */\n            this.trigger('end');\n            this.changeStatus(__('Done!'));\n            this.setState('running', false);\n            this.setState('done', true);\n\n            return this;\n        },\n\n        /**\n         * delete unique id for this test session (next test will generate new one)\n         */\n        deleteIdentifier() {\n            const url = urlHelper.route(this.config.actionDropId, this.config.controller, this.config.extension);\n            return request({ url, method: 'POST', noToken: true });\n        },\n\n        /**\n         * Runs the diagnostics\n         * @returns {diagnostic}\n         */\n        run() {\n            const information = [];\n            const scores = {};\n            const testers = [];\n            const customInput = this.getCustomInput();\n\n            const doRun = () => {\n                // common handling for testers\n                const doCheck = (testerConfig, cb) => {\n                    const testerId = testerConfig.id;\n\n                    /**\n                     * Notifies the start of a tester operation\n                     * @event diagnostic#starttester\n                     * @param {string} name - The name of the tester\n                     */\n                    this.trigger('starttester', testerId);\n                    this.setState(testerId, true);\n\n                    /**\n                     * Process the diagnostic from the loaded tester\n                     * @param {Function} testerFactory\n                     * @private\n                     */\n                    const processTester = testerFactory => {\n                        const tester = testerFactory(getConfig(testerConfig, this.config), this);\n                        this.changeStatus(tester.labels.status);\n                        tester.start((status, details, results) => {\n                            if (testerConfig.customMsgKey) {\n                                const customMsg = this.getCustomMsg(testerConfig.customMsgKey);\n                                this.addCustomFeedbackMsg(status, customMsg);\n                            }\n\n                            // the returned details must be ingested into the main details list\n                            _.forEach(details, info => information.push(info));\n                            scores[status.id] = status;\n\n                            /**\n                             * Notifies the end of a tester operation\n                             * @event diagnostic#endtester\n                             * @param {string} id - The identifier of the tester\n                             * @param {Array} results - The results of the test\n                             */\n                            this.trigger('endtester', testerId, status);\n                            this.setState(testerId, false);\n\n                            // results should be filtered in order to encode complex data\n                            results = _.mapValues(results, value => {\n                                switch (typeof value) {\n                                    case 'boolean':\n                                        return value ? 1 : 0;\n                                    case 'object':\n                                        return JSON.stringify(value);\n                                }\n                                return value;\n                            });\n\n                            // send the data to store\n                            this.store(testerId, results, () => {\n                                this.addResult(status);\n                                cb();\n                            });\n                        });\n                    };\n\n                    /**\n                     * React to loading failure\n                     * @param {Error} err\n                     * @private\n                     */\n                    const processFailure = err => {\n                        logger.error(err);\n                        feedback().error(\n                            __(\n                                'Unable to process with the diagnostic tester %s. The tester module is unreachable.',\n                                testerId\n                            )\n                        );\n                        cb();\n                    };\n\n                    require([testerConfig.tester], processTester, processFailure);\n                };\n\n                if (this.is('rendered')) {\n                    // set up the component to a new run\n                    this.prepare();\n\n                    _.forEach(this.config.testers, (testerConfig, testerId) => {\n                        testerConfig.id = testerConfig.id || testerId;\n                        if (testerConfig.enabled) {\n                            testers.push(cb => doCheck(testerConfig, cb));\n                        }\n                    });\n\n                    // launch each testers in series, then display the results\n                    async.series(testers, () => {\n                        // pick the lowest percentage as the main score\n                        const total = _.min(scores, 'globalPercentage');\n\n                        // get a status according to the main score\n                        const status = getStatus(total.globalPercentage, _thresholds);\n\n                        // display the result\n                        status.title = __('Total');\n                        status.id = 'total';\n                        this.addCustomFeedbackMsg(status, this.config.configurableText.diagTotalCheckResult);\n\n                        status.details = information;\n                        this.addResult(status);\n\n                        // done !\n                        this.finish();\n                    });\n                }\n            };\n\n            if (_.size(customInput) > 0) {\n                this.store('custom_input', customInput, doRun);\n            } else {\n                doRun();\n            }\n\n            return this;\n        },\n\n        getCustomInput() {\n            const vars = {};\n\n            window.location.href.replace(location.hash, '').replace(/[?&]+([^=&]+)=?([^&]*)?/gi, (m, key, value) => {\n                if (_.has(this.config['customInput'], key)) {\n                    vars[key] = typeof value !== 'undefined' ? value : '';\n                }\n            });\n\n            return vars;\n        }\n    };\n\n    /**\n     * Builds an instance of the diagnostic tool\n     * @param {object} container - Container in which the initialisation will render the diagnostic\n     * @param {object} config\n     * @param {string} [config.title] - The displayed title\n     * @param {string} [config.header] - A header text displayed to describe the component\n     * @param {string} [config.info] - An information text displayed to warn about run duration\n     * @param {string} [config.button] - The caption of the start button\n     * @param {string} [config.actionStore] - The name of the action to call to store the results\n     * @param {string} [config.actionCheck] - The name of the action to call to check the browser results\n     * @param {string} [config.actionSchool] - The name of the action to call to get the school name\n     * @param {string} [config.controller] - The name of the controller to call\n     * @param {string} [config.extension] - The name of the extension containing the controller\n     * @param {object} [config.storeParams] - A list of additional parameters to send with diagnostic results\n     * @param {boolean} [config.requireSchoolName] - If `true` require a school name to allow the tests to start\n     * @param {boolean} [config.requireSchoolId] - If `true` require a school ID to allow the tests to start\n     * @param {boolean} [config.validateSchoolName] - If `true` require a school number and a PIN to get the school name and to allow the tests to start\n     *\n     * @param {string} [config.browser.action] - The name of the action to call to get the browser checker\n     * @param {string} [config.browser.controller] - The name of the controller to call to get the browser checker\n     * @param {string} [config.browser.extension] - The name of the extension containing the controller to call to get the browser checker\n     *\n     * @param {number} [config.bandwidth.unit] - The typical bandwidth needed for a test taker (Mbps)\n     * @param {Array} [config.bandwidth.ideal] - The thresholds for optimal bandwidth, one by bar\n     * @param {number} [config.bandwidth.max] - Maximum number of test takers to display\n     *\n     * @param {Array} [config.performances.samples] - A list of samples to render in order to compute the rendering performances\n     * @param {number} [config.performances.occurrences] - The number of renderings by samples\n     * @param {number} [config.performances.timeout] - Max allowed duration for a sample rendering\n     * @param {number} [config.performances.optimal] - The threshold for optimal performances\n     * @param {number} [config.performances.threshold] - The threshold for minimal performances\n     * @returns {diagnostic}\n     */\n    return function diagnosticFactory(container, config) {\n        // fix the translations for content loaded from config files\n        if (config) {\n            _.forEach(['title', 'header', 'footer', 'info', 'button'], name => {\n                if (config[name]) {\n                    config[name] = __(config[name]);\n                }\n            });\n        }\n\n        const diagComponent = component(diagnostic, _defaults)\n            .setTemplate(mainTpl)\n\n            // uninstalls the component\n            .on('destroy', function onDiagnosticDestroy() {\n                this.controls = null;\n            })\n\n            // initialise component\n            .on('init', function onDiagnosticInit() {\n                this.render(container);\n            })\n            // renders the component\n            .on('render', function onDiagnosticRender() {\n                /**\n                 * Starts the tests\n                 * @param {object} [data]\n                 * @private\n                 */\n                const runDiagnostics = data => {\n                    // append the school name to the queries\n                    if (data && _.isPlainObject(data)) {\n                        this.config.storeParams = _.assign(this.config.storeParams || {}, data);\n                    }\n\n                    this.run();\n                };\n\n                /**\n                 * Default launcher\n                 * @private\n                 */\n                let launch = () => runDiagnostics();\n\n                /**\n                 * Gets a control by its registered name\n                 * @param {string} name - the name registered in the collection of controls\n                 * @private\n                 */\n                const getControl = name => this.controls[`\\$${name}`];\n\n                /**\n                 * Gets the value of an input field\n                 * @param {string} name - the name registered in the collection of controls\n                 * @returns {string}\n                 * @private\n                 */\n                function getInputValue(name) {\n                    const $control = getControl(name);\n                    return (($control && $control.val()) || '').trim();\n                }\n\n                /**\n                 * Sets the value of an input field\n                 * @param {string} name - the name registered in the collection of controls\n                 * @param {string} value\n                 * @private\n                 */\n                function setInputValue(name, value) {\n                    const $control = getControl(name);\n                    $control && $control.val(value);\n                }\n\n                /**\n                 * Enable/Disable a control\n                 * @param {string} name - the name registered in the collection of controls\n                 * @param {boolean} [state]\n                 * @private\n                 */\n                function toggleControl(name, state) {\n                    const $control = getControl(name);\n                    if ($control) {\n                        if (typeof state === 'undefined') {\n                            state = !$control.is(':enabled');\n                        }\n                        if (state) {\n                            $control.prop('disabled', false);\n                        } else {\n                            $control.prop('disabled', true);\n                        }\n                    }\n                }\n\n                /**\n                 * Requests the server to get the school name\n                 * @param {object} values\n                 * @private\n                 */\n                const requestSchoolName = values => {\n                    const componentConfig = this.config;\n                    return requestData(\n                        urlHelper.route(\n                            componentConfig.actionSchool,\n                            componentConfig.controller,\n                            componentConfig.extension\n                        ),\n                        values,\n                        'POST'\n                    ).then(data => {\n                        return {\n                            school_name: data,\n                            school_number: values.school_number\n                        };\n                    });\n                };\n\n                /**\n                 * Install the school name manager.\n                 * @todo: improve this by moving it into a plugin, and obviously implement the plugin handling\n                 * @private\n                 */\n                const manageSchoolProperties = (fields, validate) => {\n                    /**\n                     * Checks if the start button can be enabled\n                     * @returns {boolean}\n                     * @private\n                     */\n                    function toggleStart() {\n                        const allow = _.every(fields, getInputValue);\n                        toggleControl('start', allow);\n                        return allow;\n                    }\n\n                    /**\n                     * Enables/Disables the fields\n                     * @param {boolean} state\n                     * @private\n                     */\n                    function toggleFields(state) {\n                        _.forEach(fields, function(fieldName) {\n                            toggleControl(fieldName, state);\n                        });\n                    }\n\n                    // ensure the diagnostic cannot start without all fields properly input\n                    _.forEach(fields, fieldName => {\n                        this.controls[`\\$${fieldName}`] = this.getElement()\n                            .find(`[data-control=\"${fieldName}\"]`)\n                            .on('keypress', e => {\n                                const shouldStart = e.which === 13;\n                                if (shouldStart) {\n                                    e.preventDefault();\n                                }\n                                _.defer(() => {\n                                    if (toggleStart() && shouldStart) {\n                                        this.controls.$start.click();\n                                    }\n                                });\n                            });\n                    });\n\n                    toggleStart();\n\n                    // will store the school name in the browser storage, that will allow to restore it next time\n                    toggleFields(false);\n                    store('client-diagnostic')\n                        .then(storage => {\n                            // store the school name on test start, to ensure consistency\n                            this.on('start.school', () => {\n                                _.forEach(fields, fieldName => {\n                                    storage.setItem(fieldName, getInputValue(fieldName)).catch(error => {\n                                        logger.error(error);\n                                    });\n                                });\n                            });\n\n                            // restore the school name on load\n                            return Promise.all(\n                                _.map(fields, fieldName => {\n                                    return storage.getItem(fieldName).then(value => {\n                                        setInputValue(fieldName, value);\n                                    });\n                                })\n                            );\n                        })\n                        .catch(error => {\n                            logger.error(error);\n                        })\n                        .then(() => {\n                            toggleFields(true);\n                            toggleStart();\n                        });\n\n                    // ensure the fields are validated and the school name is properly sent before allowing to launch the test\n                    launch = () => {\n                        const values = _.reduce(\n                            fields,\n                            (result, fieldName) => {\n                                result[fieldName] = getInputValue(fieldName);\n                                return result;\n                            },\n                            {}\n                        );\n\n                        this.changeStatus(__('Getting school name...'))\n                            .cleanUp()\n                            .disable();\n\n                        if (_.isFunction(validate)) {\n                            validate(values)\n                                .then(runDiagnostics)\n                                .catch(error => {\n                                    const response = error.response || {};\n                                    const message =\n                                        response.errorMsg ||\n                                        response.errorMessage ||\n                                        __('An error occurred! Please verify your input!');\n                                    dialogAlert(message);\n                                    logger.error(error);\n                                    this.changeStatus(__('Failed to get school name')).enable();\n                                });\n                        } else {\n                            runDiagnostics(values);\n                        }\n                    };\n\n                    // ensure the fields are not writable while the test is running\n                    this.on('start.school', () => {\n                        toggleFields(false);\n                    }).on('end.school', () => {\n                        toggleFields(true);\n                    });\n                };\n\n                // get access to all needed placeholders\n                this.controls = {\n                    $start: this.$component.find('[data-action=\"test-launcher\"]'),\n                    $status: this.$component.find('.status h2'),\n                    $results: this.$component.find('.results')\n                };\n\n                // start the diagnostic\n                this.controls.$start.on('click', () => {\n                    this.controls.$start.is(':enabled') && launch();\n                });\n\n                if (this.config.requireSchoolName) {\n                    if (this.config.validateSchoolName) {\n                        manageSchoolProperties(['school_number', 'school_pin'], requestSchoolName);\n                    } else {\n                        manageSchoolProperties(['school_name']);\n                    }\n                }\n\n                if (this.config.requireSchoolId) {\n                    manageSchoolProperties(['school_id', 'workstation']);\n                }\n\n                // show result details\n                this.controls.$results.on('click', 'button[data-action=\"show-details\"]', function onShowDetails() {\n                    const $btn = $(this).closest('button');\n                    const $result = $btn.closest('[data-result]');\n                    const $details = $result.find('.details');\n                    $details.removeClass('hidden');\n                    $btn.addClass('hidden');\n                    $result.find('[data-action=\"hide-details\"]').removeClass('hidden');\n                });\n\n                // hide result details\n                this.controls.$results.on('click', 'button[data-action=\"hide-details\"]', function onHideDetails() {\n                    const $btn = $(this).closest('button');\n                    const $result = $btn.closest('[data-result]');\n                    const $details = $result.find('.details');\n                    $details.addClass('hidden');\n                    $btn.addClass('hidden');\n                    $result.find('[data-action=\"show-details\"]').removeClass('hidden');\n                });\n            });\n\n        _.defer(() => diagComponent.init(config));\n\n        return diagComponent;\n    };\n});\n\n","\ndefine('tpl!taoClientDiagnostic/templates/diagnostic/main', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, self=this, helperMissing=helpers.helperMissing;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"\\n            \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.diagInstructions), {hash:{},inverse:self.noop,fn:self.program(2, program2, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n        \";\n  return buffer;\n  }\nfunction program2(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"<p>\";\n  if (helper = helpers.diagInstructions) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.diagInstructions); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</p>\";\n  return buffer;\n  }\n\nfunction program4(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"<p>\";\n  if (helper = helpers.header) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.header); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</p>\";\n  return buffer;\n  }\n\nfunction program6(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"<p>\";\n  if (helper = helpers.info) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.info); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</p>\";\n  return buffer;\n  }\n\nfunction program8(depth0,data) {\n  \n  var buffer = \"\", helper, options;\n  buffer += \"\\n            <p>\\n                <label for=\\\"school_id\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"School ID:\", options) : helperMissing.call(depth0, \"__\", \"School ID:\", options)))\n    + \"</label>\\n                <input type=\\\"text\\\" data-control=\\\"school_id\\\" id=\\\"school_id\\\" name=\\\"school_id\\\" maxlength=\\\"255\\\" placeholder=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"School ID\", options) : helperMissing.call(depth0, \"__\", \"School ID\", options)))\n    + \"\\\" />\\n            </p>\\n        \";\n  return buffer;\n  }\n\nfunction program10(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"\\n            \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.validateSchoolName), {hash:{},inverse:self.program(13, program13, data),fn:self.program(11, program11, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n        \";\n  return buffer;\n  }\nfunction program11(depth0,data) {\n  \n  var buffer = \"\", helper, options;\n  buffer += \"\\n        <p>\\n            <label for=\\\"school_number\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"School number:\", options) : helperMissing.call(depth0, \"__\", \"School number:\", options)))\n    + \"</label>\\n            <input type=\\\"text\\\" data-control=\\\"school_number\\\" id=\\\"school_number\\\" name=\\\"school_number\\\" maxlength=\\\"10\\\" placeholder=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"School number\", options) : helperMissing.call(depth0, \"__\", \"School number\", options)))\n    + \"\\\" />\\n        </p>\\n        <p>\\n            <label for=\\\"school_pin\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"School PIN:\", options) : helperMissing.call(depth0, \"__\", \"School PIN:\", options)))\n    + \"</label>\\n            <input type=\\\"text\\\" data-control=\\\"school_pin\\\" id=\\\"school_pin\\\" name=\\\"school_pin\\\" maxlength=\\\"4\\\" placeholder=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"School PIN code (4 digits)\", options) : helperMissing.call(depth0, \"__\", \"School PIN code (4 digits)\", options)))\n    + \"\\\" />\\n        </p>\\n            \";\n  return buffer;\n  }\n\nfunction program13(depth0,data) {\n  \n  var buffer = \"\", helper, options;\n  buffer += \"\\n        <p>\\n            <label for=\\\"school_name\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"School name:\", options) : helperMissing.call(depth0, \"__\", \"School name:\", options)))\n    + \"</label>\\n            <input type=\\\"text\\\" data-control=\\\"school_name\\\" id=\\\"school_name\\\" name=\\\"school_name\\\" maxlength=\\\"255\\\" placeholder=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"School name\", options) : helperMissing.call(depth0, \"__\", \"School name\", options)))\n    + \"\\\" />\\n        </p>\\n            \";\n  return buffer;\n  }\n\n  buffer += \"<div class=\\\"diagnostics-main-area\\\">\\n\\n    <h1>\";\n  if (helper = helpers.title) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.title); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</h1>\\n\\n    <div class=\\\"intro\\\">\\n        \";\n  stack1 = helpers['with'].call(depth0, (depth0 && depth0.configurableText), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n        \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.header), {hash:{},inverse:self.noop,fn:self.program(4, program4, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n        \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.info), {hash:{},inverse:self.noop,fn:self.program(6, program6, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n        \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.requireSchoolId), {hash:{},inverse:self.noop,fn:self.program(8, program8, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n        \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.requireSchoolName), {hash:{},inverse:self.noop,fn:self.program(10, program10, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n        <p>\\n            <label for=\\\"workstation\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Workstation:\", options) : helperMissing.call(depth0, \"__\", \"Workstation:\", options)))\n    + \"</label>\\n            <input type=\\\"text\\\" data-control=\\\"workstation\\\" id=\\\"workstation\\\" name=\\\"workstation\\\" maxlength=\\\"64\\\" placeholder=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Workstation name\", options) : helperMissing.call(depth0, \"__\", \"Workstation name\", options)))\n    + \"\\\" />\\n        </p>\\n    </div>\\n\\n    <div class=\\\"clearfix\\\">\\n        <button data-action=\\\"test-launcher\\\" class=\\\"btn-info small rgt\\\">\";\n  if (helper = helpers.button) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.button); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</button>\\n    </div>\\n\\n    <ul class=\\\"plain results\\\"></ul>\\n\\n    <div class=\\\"status\\\">\\n        <h2></h2>\\n    </div>\\n\\n</div>\";\n  return buffer;\n  });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017-2021 (original work) Open Assessment Technologies SA;\n */\ndefine('taoClientDiagnostic/controller/Diagnostic/diagnostic',[\n    'module',\n    'jquery',\n    'i18n',\n    'helpers',\n    'core/request',\n    'layout/loading-bar',\n    'ui/actionbar',\n    'ui/feedback',\n    'taoClientDiagnostic/tools/diagnostic/diagnostic',\n    'tpl!taoClientDiagnostic/templates/diagnostic/main'\n], function(module, $, __, helpers, request, loadingBar, actionbar, feedback, diagnosticFactory, diagnosticTpl) {\n    'use strict';\n\n    /**\n     * The CSS scope\n     * @type {string}\n     * @private\n     */\n    const cssScope = '.diagnostic-runner';\n\n    // the page is always loading data when starting\n    loadingBar.start();\n\n    /**\n     * Controls the readiness check page\n     * @type {object}\n     */\n    return {\n        /**\n         * Entry point of the page\n         */\n        start() {\n            const $container = $(cssScope);\n            const extension = $container.data('extension') || 'taoClientDiagnostic';\n            const $list = $container.find('.list');\n            const $panel = $('.panel');\n            const extensionConfig = $container.data('config') || {};\n            const config = extensionConfig.diagnostic || extensionConfig;\n            const indexUrl = helpers._url('index', 'Diagnostic', extension);\n            const buttons = [];\n            const moduleConfig = module.config() || {};\n\n            config.configurableText = moduleConfig.configurableText || {};\n\n            /**\n             * Installs the diagnostic tool GUI\n             * @param {string} [workstation]\n             */\n            function installTester(workstation) {\n                diagnosticFactory($list, config)\n                    .setTemplate(diagnosticTpl)\n                    .on('render', function onDiagnosticRender() {\n                        // get access to the input\n                        this.controls.$workstation = this.getElement()\n                            .find('[data-control=\"workstation\"]')\n                            .on('keypress', e => {\n                                if (e.which === 13) {\n                                    e.preventDefault();\n                                    this.run();\n                                }\n                            })\n                            .val(workstation);\n\n                        loadingBar.stop();\n                        if (config.autoStart) {\n                            this.run();\n                        }\n                    })\n                    .on('start', function onDiagnosticStart() {\n                        // append the workstation name to the queries\n                        this.config.storeParams = this.config.storeParams || {};\n                        this.config.storeParams.workstation = this.controls.$workstation.val();\n\n                        // disable the input when running the test\n                        this.controls.$workstation.prop('disabled', true);\n                        loadingBar.start();\n                    })\n                    .on('end', function onDiagnosticEnd() {\n                        // enable the input when the test is complete\n                        this.controls.$workstation.prop('disabled', false);\n                        loadingBar.stop();\n                    });\n            }\n\n            buttons.push({\n                id: 'back',\n                icon: 'step-backward',\n                title: __('Return to the list'),\n                label: __('List of readiness checks'),\n                action() {\n                    window.location.href = indexUrl;\n                }\n            });\n\n            // tool: close tab, this won't be present in an LTI iframe\n            // button should always be right most\n            if (window.self === window.top) {\n                buttons.push({\n                    id: 'exitButton',\n                    icon: 'close',\n                    title: __('Exit'),\n                    label: __('Exit'),\n                    action() {\n                        window.self.close();\n                    }\n                });\n            }\n\n            actionbar({\n                renderTo: $panel,\n                buttons\n            });\n\n            // need to know the workstation name to display it\n            const url = helpers._url('workstation', 'DiagnosticChecker', extension);\n            request({ url, noToken: true })\n                .then(data => installTester(data && data.workstation))\n                .catch(() => {\n                    feedback().error(__('Unable to get the workstation name!'));\n                    installTester();\n                });\n        }\n    };\n});\n\n","!function(e,t,i){\"use strict\";\"function\"==typeof define&&define.amd?define('taoClientDiagnostic/lib/fingerprint/fingerprint2',i):\"undefined\"!=typeof module&&module.exports?module.exports=i():t.exports?t.exports=i():t[e]=i()}(\"Fingerprint2\",this,function(){\"use strict\";var e=function(t){if(!(this instanceof e))return new e(t);var i={swfContainerId:\"fingerprintjs2\",swfPath:\"flash/compiled/FontList.swf\",detectScreenOrientation:!0,sortPluginsFor:[/palemoon/i],userDefinedFonts:[]};this.options=this.extend(t,i),this.nativeForEach=Array.prototype.forEach,this.nativeMap=Array.prototype.map};return e.prototype={extend:function(e,t){if(null==e)return t;for(var i in e)null!=e[i]&&t[i]!==e[i]&&(t[i]=e[i]);return t},get:function(e){var t=this,i={data:[],push:function(e){var i=e.key,a=e.value;\"function\"==typeof t.options.preprocessor&&(a=t.options.preprocessor(i,a)),this.data.push({key:i,value:a})}};i=this.userAgentKey(i),i=this.languageKey(i),i=this.colorDepthKey(i),i=this.pixelRatioKey(i),i=this.hardwareConcurrencyKey(i),i=this.screenResolutionKey(i),i=this.availableScreenResolutionKey(i),i=this.timezoneOffsetKey(i),i=this.sessionStorageKey(i),i=this.localStorageKey(i),i=this.indexedDbKey(i),i=this.addBehaviorKey(i),i=this.openDatabaseKey(i),i=this.cpuClassKey(i),i=this.platformKey(i),i=this.doNotTrackKey(i),i=this.pluginsKey(i),i=this.canvasKey(i),i=this.webglKey(i),i=this.adBlockKey(i),i=this.hasLiedLanguagesKey(i),i=this.hasLiedResolutionKey(i),i=this.hasLiedOsKey(i),i=this.hasLiedBrowserKey(i),i=this.touchSupportKey(i),i=this.customEntropyFunction(i),this.fontsKey(i,function(i){var a=[];t.each(i.data,function(e){var t=e.value;\"undefined\"!=typeof e.value.join&&(t=e.value.join(\";\")),a.push(t)});var r=t.x64hash128(a.join(\"~~~\"),31);return e(r,i.data)})},customEntropyFunction:function(e){return\"function\"==typeof this.options.customFunction&&e.push({key:\"custom\",value:this.options.customFunction()}),e},userAgentKey:function(e){return this.options.excludeUserAgent||e.push({key:\"user_agent\",value:this.getUserAgent()}),e},getUserAgent:function(){return navigator.userAgent},languageKey:function(e){return this.options.excludeLanguage||e.push({key:\"language\",value:navigator.language||navigator.userLanguage||navigator.browserLanguage||navigator.systemLanguage||\"\"}),e},colorDepthKey:function(e){return this.options.excludeColorDepth||e.push({key:\"color_depth\",value:screen.colorDepth||-1}),e},pixelRatioKey:function(e){return this.options.excludePixelRatio||e.push({key:\"pixel_ratio\",value:this.getPixelRatio()}),e},getPixelRatio:function(){return window.devicePixelRatio||\"\"},screenResolutionKey:function(e){return this.options.excludeScreenResolution?e:this.getScreenResolution(e)},getScreenResolution:function(e){var t;return t=this.options.detectScreenOrientation&&screen.height>screen.width?[screen.height,screen.width]:[screen.width,screen.height],\"undefined\"!=typeof t&&e.push({key:\"resolution\",value:t}),e},availableScreenResolutionKey:function(e){return this.options.excludeAvailableScreenResolution?e:this.getAvailableScreenResolution(e)},getAvailableScreenResolution:function(e){var t;return screen.availWidth&&screen.availHeight&&(t=this.options.detectScreenOrientation?screen.availHeight>screen.availWidth?[screen.availHeight,screen.availWidth]:[screen.availWidth,screen.availHeight]:[screen.availHeight,screen.availWidth]),\"undefined\"!=typeof t&&e.push({key:\"available_resolution\",value:t}),e},timezoneOffsetKey:function(e){return this.options.excludeTimezoneOffset||e.push({key:\"timezone_offset\",value:(new Date).getTimezoneOffset()}),e},sessionStorageKey:function(e){return!this.options.excludeSessionStorage&&this.hasSessionStorage()&&e.push({key:\"session_storage\",value:1}),e},localStorageKey:function(e){return!this.options.excludeSessionStorage&&this.hasLocalStorage()&&e.push({key:\"local_storage\",value:1}),e},indexedDbKey:function(e){return!this.options.excludeIndexedDB&&this.hasIndexedDB()&&e.push({key:\"indexed_db\",value:1}),e},addBehaviorKey:function(e){return document.body&&!this.options.excludeAddBehavior&&document.body.addBehavior&&e.push({key:\"add_behavior\",value:1}),e},openDatabaseKey:function(e){return!this.options.excludeOpenDatabase&&window.openDatabase&&e.push({key:\"open_database\",value:1}),e},cpuClassKey:function(e){return this.options.excludeCpuClass||e.push({key:\"cpu_class\",value:this.getNavigatorCpuClass()}),e},platformKey:function(e){return this.options.excludePlatform||e.push({key:\"navigator_platform\",value:this.getNavigatorPlatform()}),e},doNotTrackKey:function(e){return this.options.excludeDoNotTrack||e.push({key:\"do_not_track\",value:this.getDoNotTrack()}),e},canvasKey:function(e){return!this.options.excludeCanvas&&this.isCanvasSupported()&&e.push({key:\"canvas\",value:this.getCanvasFp()}),e},webglKey:function(e){return this.options.excludeWebGL?e:this.isWebGlSupported()?(e.push({key:\"webgl\",value:this.getWebglFp()}),e):e},adBlockKey:function(e){return this.options.excludeAdBlock||e.push({key:\"adblock\",value:this.getAdBlock()}),e},hasLiedLanguagesKey:function(e){return this.options.excludeHasLiedLanguages||e.push({key:\"has_lied_languages\",value:this.getHasLiedLanguages()}),e},hasLiedResolutionKey:function(e){return this.options.excludeHasLiedResolution||e.push({key:\"has_lied_resolution\",value:this.getHasLiedResolution()}),e},hasLiedOsKey:function(e){return this.options.excludeHasLiedOs||e.push({key:\"has_lied_os\",value:this.getHasLiedOs()}),e},hasLiedBrowserKey:function(e){return this.options.excludeHasLiedBrowser||e.push({key:\"has_lied_browser\",value:this.getHasLiedBrowser()}),e},fontsKey:function(e,t){return this.options.excludeJsFonts?this.flashFontsKey(e,t):this.jsFontsKey(e,t)},flashFontsKey:function(e,t){return this.options.excludeFlashFonts?t(e):this.hasSwfObjectLoaded()&&this.hasMinFlashInstalled()?\"undefined\"==typeof this.options.swfPath?t(e):void this.loadSwfAndDetectFonts(function(i){e.push({key:\"swf_fonts\",value:i.join(\";\")}),t(e)}):t(e)},jsFontsKey:function(e,t){var i=this;return setTimeout(function(){var a=[\"monospace\",\"sans-serif\",\"serif\"],r=[\"Andale Mono\",\"Arial\",\"Arial Black\",\"Arial Hebrew\",\"Arial MT\",\"Arial Narrow\",\"Arial Rounded MT Bold\",\"Arial Unicode MS\",\"Bitstream Vera Sans Mono\",\"Book Antiqua\",\"Bookman Old Style\",\"Calibri\",\"Cambria\",\"Cambria Math\",\"Century\",\"Century Gothic\",\"Century Schoolbook\",\"Comic Sans\",\"Comic Sans MS\",\"Consolas\",\"Courier\",\"Courier New\",\"Garamond\",\"Geneva\",\"Georgia\",\"Helvetica\",\"Helvetica Neue\",\"Impact\",\"Lucida Bright\",\"Lucida Calligraphy\",\"Lucida Console\",\"Lucida Fax\",\"LUCIDA GRANDE\",\"Lucida Handwriting\",\"Lucida Sans\",\"Lucida Sans Typewriter\",\"Lucida Sans Unicode\",\"Microsoft Sans Serif\",\"Monaco\",\"Monotype Corsiva\",\"MS Gothic\",\"MS Outlook\",\"MS PGothic\",\"MS Reference Sans Serif\",\"MS Sans Serif\",\"MS Serif\",\"MYRIAD\",\"MYRIAD PRO\",\"Palatino\",\"Palatino Linotype\",\"Segoe Print\",\"Segoe Script\",\"Segoe UI\",\"Segoe UI Light\",\"Segoe UI Semibold\",\"Segoe UI Symbol\",\"Tahoma\",\"Times\",\"Times New Roman\",\"Times New Roman PS\",\"Trebuchet MS\",\"Verdana\",\"Wingdings\",\"Wingdings 2\",\"Wingdings 3\"],n=[\"Abadi MT Condensed Light\",\"Academy Engraved LET\",\"ADOBE CASLON PRO\",\"Adobe Garamond\",\"ADOBE GARAMOND PRO\",\"Agency FB\",\"Aharoni\",\"Albertus Extra Bold\",\"Albertus Medium\",\"Algerian\",\"Amazone BT\",\"American Typewriter\",\"American Typewriter Condensed\",\"AmerType Md BT\",\"Andalus\",\"Angsana New\",\"AngsanaUPC\",\"Antique Olive\",\"Aparajita\",\"Apple Chancery\",\"Apple Color Emoji\",\"Apple SD Gothic Neo\",\"Arabic Typesetting\",\"ARCHER\",\"ARNO PRO\",\"Arrus BT\",\"Aurora Cn BT\",\"AvantGarde Bk BT\",\"AvantGarde Md BT\",\"AVENIR\",\"Ayuthaya\",\"Bandy\",\"Bangla Sangam MN\",\"Bank Gothic\",\"BankGothic Md BT\",\"Baskerville\",\"Baskerville Old Face\",\"Batang\",\"BatangChe\",\"Bauer Bodoni\",\"Bauhaus 93\",\"Bazooka\",\"Bell MT\",\"Bembo\",\"Benguiat Bk BT\",\"Berlin Sans FB\",\"Berlin Sans FB Demi\",\"Bernard MT Condensed\",\"BernhardFashion BT\",\"BernhardMod BT\",\"Big Caslon\",\"BinnerD\",\"Blackadder ITC\",\"BlairMdITC TT\",\"Bodoni 72\",\"Bodoni 72 Oldstyle\",\"Bodoni 72 Smallcaps\",\"Bodoni MT\",\"Bodoni MT Black\",\"Bodoni MT Condensed\",\"Bodoni MT Poster Compressed\",\"Bookshelf Symbol 7\",\"Boulder\",\"Bradley Hand\",\"Bradley Hand ITC\",\"Bremen Bd BT\",\"Britannic Bold\",\"Broadway\",\"Browallia New\",\"BrowalliaUPC\",\"Brush Script MT\",\"Californian FB\",\"Calisto MT\",\"Calligrapher\",\"Candara\",\"CaslonOpnface BT\",\"Castellar\",\"Centaur\",\"Cezanne\",\"CG Omega\",\"CG Times\",\"Chalkboard\",\"Chalkboard SE\",\"Chalkduster\",\"Charlesworth\",\"Charter Bd BT\",\"Charter BT\",\"Chaucer\",\"ChelthmITC Bk BT\",\"Chiller\",\"Clarendon\",\"Clarendon Condensed\",\"CloisterBlack BT\",\"Cochin\",\"Colonna MT\",\"Constantia\",\"Cooper Black\",\"Copperplate\",\"Copperplate Gothic\",\"Copperplate Gothic Bold\",\"Copperplate Gothic Light\",\"CopperplGoth Bd BT\",\"Corbel\",\"Cordia New\",\"CordiaUPC\",\"Cornerstone\",\"Coronet\",\"Cuckoo\",\"Curlz MT\",\"DaunPenh\",\"Dauphin\",\"David\",\"DB LCD Temp\",\"DELICIOUS\",\"Denmark\",\"DFKai-SB\",\"Didot\",\"DilleniaUPC\",\"DIN\",\"DokChampa\",\"Dotum\",\"DotumChe\",\"Ebrima\",\"Edwardian Script ITC\",\"Elephant\",\"English 111 Vivace BT\",\"Engravers MT\",\"EngraversGothic BT\",\"Eras Bold ITC\",\"Eras Demi ITC\",\"Eras Light ITC\",\"Eras Medium ITC\",\"EucrosiaUPC\",\"Euphemia\",\"Euphemia UCAS\",\"EUROSTILE\",\"Exotc350 Bd BT\",\"FangSong\",\"Felix Titling\",\"Fixedsys\",\"FONTIN\",\"Footlight MT Light\",\"Forte\",\"FrankRuehl\",\"Fransiscan\",\"Freefrm721 Blk BT\",\"FreesiaUPC\",\"Freestyle Script\",\"French Script MT\",\"FrnkGothITC Bk BT\",\"Fruitger\",\"FRUTIGER\",\"Futura\",\"Futura Bk BT\",\"Futura Lt BT\",\"Futura Md BT\",\"Futura ZBlk BT\",\"FuturaBlack BT\",\"Gabriola\",\"Galliard BT\",\"Gautami\",\"Geeza Pro\",\"Geometr231 BT\",\"Geometr231 Hv BT\",\"Geometr231 Lt BT\",\"GeoSlab 703 Lt BT\",\"GeoSlab 703 XBd BT\",\"Gigi\",\"Gill Sans\",\"Gill Sans MT\",\"Gill Sans MT Condensed\",\"Gill Sans MT Ext Condensed Bold\",\"Gill Sans Ultra Bold\",\"Gill Sans Ultra Bold Condensed\",\"Gisha\",\"Gloucester MT Extra Condensed\",\"GOTHAM\",\"GOTHAM BOLD\",\"Goudy Old Style\",\"Goudy Stout\",\"GoudyHandtooled BT\",\"GoudyOLSt BT\",\"Gujarati Sangam MN\",\"Gulim\",\"GulimChe\",\"Gungsuh\",\"GungsuhChe\",\"Gurmukhi MN\",\"Haettenschweiler\",\"Harlow Solid Italic\",\"Harrington\",\"Heather\",\"Heiti SC\",\"Heiti TC\",\"HELV\",\"Herald\",\"High Tower Text\",\"Hiragino Kaku Gothic ProN\",\"Hiragino Mincho ProN\",\"Hoefler Text\",\"Humanst 521 Cn BT\",\"Humanst521 BT\",\"Humanst521 Lt BT\",\"Imprint MT Shadow\",\"Incised901 Bd BT\",\"Incised901 BT\",\"Incised901 Lt BT\",\"INCONSOLATA\",\"Informal Roman\",\"Informal011 BT\",\"INTERSTATE\",\"IrisUPC\",\"Iskoola Pota\",\"JasmineUPC\",\"Jazz LET\",\"Jenson\",\"Jester\",\"Jokerman\",\"Juice ITC\",\"Kabel Bk BT\",\"Kabel Ult BT\",\"Kailasa\",\"KaiTi\",\"Kalinga\",\"Kannada Sangam MN\",\"Kartika\",\"Kaufmann Bd BT\",\"Kaufmann BT\",\"Khmer UI\",\"KodchiangUPC\",\"Kokila\",\"Korinna BT\",\"Kristen ITC\",\"Krungthep\",\"Kunstler Script\",\"Lao UI\",\"Latha\",\"Leelawadee\",\"Letter Gothic\",\"Levenim MT\",\"LilyUPC\",\"Lithograph\",\"Lithograph Light\",\"Long Island\",\"Lydian BT\",\"Magneto\",\"Maiandra GD\",\"Malayalam Sangam MN\",\"Malgun Gothic\",\"Mangal\",\"Marigold\",\"Marion\",\"Marker Felt\",\"Market\",\"Marlett\",\"Matisse ITC\",\"Matura MT Script Capitals\",\"Meiryo\",\"Meiryo UI\",\"Microsoft Himalaya\",\"Microsoft JhengHei\",\"Microsoft New Tai Lue\",\"Microsoft PhagsPa\",\"Microsoft Tai Le\",\"Microsoft Uighur\",\"Microsoft YaHei\",\"Microsoft Yi Baiti\",\"MingLiU\",\"MingLiU_HKSCS\",\"MingLiU_HKSCS-ExtB\",\"MingLiU-ExtB\",\"Minion\",\"Minion Pro\",\"Miriam\",\"Miriam Fixed\",\"Mistral\",\"Modern\",\"Modern No. 20\",\"Mona Lisa Solid ITC TT\",\"Mongolian Baiti\",\"MONO\",\"MoolBoran\",\"Mrs Eaves\",\"MS LineDraw\",\"MS Mincho\",\"MS PMincho\",\"MS Reference Specialty\",\"MS UI Gothic\",\"MT Extra\",\"MUSEO\",\"MV Boli\",\"Nadeem\",\"Narkisim\",\"NEVIS\",\"News Gothic\",\"News GothicMT\",\"NewsGoth BT\",\"Niagara Engraved\",\"Niagara Solid\",\"Noteworthy\",\"NSimSun\",\"Nyala\",\"OCR A Extended\",\"Old Century\",\"Old English Text MT\",\"Onyx\",\"Onyx BT\",\"OPTIMA\",\"Oriya Sangam MN\",\"OSAKA\",\"OzHandicraft BT\",\"Palace Script MT\",\"Papyrus\",\"Parchment\",\"Party LET\",\"Pegasus\",\"Perpetua\",\"Perpetua Titling MT\",\"PetitaBold\",\"Pickwick\",\"Plantagenet Cherokee\",\"Playbill\",\"PMingLiU\",\"PMingLiU-ExtB\",\"Poor Richard\",\"Poster\",\"PosterBodoni BT\",\"PRINCETOWN LET\",\"Pristina\",\"PTBarnum BT\",\"Pythagoras\",\"Raavi\",\"Rage Italic\",\"Ravie\",\"Ribbon131 Bd BT\",\"Rockwell\",\"Rockwell Condensed\",\"Rockwell Extra Bold\",\"Rod\",\"Roman\",\"Sakkal Majalla\",\"Santa Fe LET\",\"Savoye LET\",\"Sceptre\",\"Script\",\"Script MT Bold\",\"SCRIPTINA\",\"Serifa\",\"Serifa BT\",\"Serifa Th BT\",\"ShelleyVolante BT\",\"Sherwood\",\"Shonar Bangla\",\"Showcard Gothic\",\"Shruti\",\"Signboard\",\"SILKSCREEN\",\"SimHei\",\"Simplified Arabic\",\"Simplified Arabic Fixed\",\"SimSun\",\"SimSun-ExtB\",\"Sinhala Sangam MN\",\"Sketch Rockwell\",\"Skia\",\"Small Fonts\",\"Snap ITC\",\"Snell Roundhand\",\"Socket\",\"Souvenir Lt BT\",\"Staccato222 BT\",\"Steamer\",\"Stencil\",\"Storybook\",\"Styllo\",\"Subway\",\"Swis721 BlkEx BT\",\"Swiss911 XCm BT\",\"Sylfaen\",\"Synchro LET\",\"System\",\"Tamil Sangam MN\",\"Technical\",\"Teletype\",\"Telugu Sangam MN\",\"Tempus Sans ITC\",\"Terminal\",\"Thonburi\",\"Traditional Arabic\",\"Trajan\",\"TRAJAN PRO\",\"Tristan\",\"Tubular\",\"Tunga\",\"Tw Cen MT\",\"Tw Cen MT Condensed\",\"Tw Cen MT Condensed Extra Bold\",\"TypoUpright BT\",\"Unicorn\",\"Univers\",\"Univers CE 55 Medium\",\"Univers Condensed\",\"Utsaah\",\"Vagabond\",\"Vani\",\"Vijaya\",\"Viner Hand ITC\",\"VisualUI\",\"Vivaldi\",\"Vladimir Script\",\"Vrinda\",\"Westminster\",\"WHITNEY\",\"Wide Latin\",\"ZapfEllipt BT\",\"ZapfHumnst BT\",\"ZapfHumnst Dm BT\",\"Zapfino\",\"Zurich BlkEx BT\",\"Zurich Ex BT\",\"ZWAdobeF\"];i.options.extendedJsFonts&&(r=r.concat(n)),r=r.concat(i.options.userDefinedFonts);var o=\"mmmmmmmmmmlli\",s=\"72px\",l=document.getElementsByTagName(\"body\")[0],h=document.createElement(\"div\"),u=document.createElement(\"div\"),c={},d={},g=function(){var e=document.createElement(\"span\");return e.style.position=\"absolute\",e.style.left=\"-9999px\",e.style.fontSize=s,e.style.lineHeight=\"normal\",e.innerHTML=o,e},p=function(e,t){var i=g();return i.style.fontFamily=\"'\"+e+\"',\"+t,i},f=function(){for(var e=[],t=0,i=a.length;t<i;t++){var r=g();r.style.fontFamily=a[t],h.appendChild(r),e.push(r)}return e},m=function(){for(var e={},t=0,i=r.length;t<i;t++){for(var n=[],o=0,s=a.length;o<s;o++){var l=p(r[t],a[o]);u.appendChild(l),n.push(l)}e[r[t]]=n}return e},T=function(e){for(var t=!1,i=0;i<a.length;i++)if(t=e[i].offsetWidth!==c[a[i]]||e[i].offsetHeight!==d[a[i]])return t;return t},S=f();l.appendChild(h);for(var x=0,v=a.length;x<v;x++)c[a[x]]=S[x].offsetWidth,d[a[x]]=S[x].offsetHeight;var E=m();l.appendChild(u);for(var M=[],A=0,y=r.length;A<y;A++)T(E[r[A]])&&M.push(r[A]);l.removeChild(u),l.removeChild(h),e.push({key:\"js_fonts\",value:M}),t(e)},1)},pluginsKey:function(e){return this.options.excludePlugins||(this.isIE()?this.options.excludeIEPlugins||e.push({key:\"ie_plugins\",value:this.getIEPlugins()}):e.push({key:\"regular_plugins\",value:this.getRegularPlugins()})),e},getRegularPlugins:function(){for(var e=[],t=0,i=navigator.plugins.length;t<i;t++)e.push(navigator.plugins[t]);return this.pluginsShouldBeSorted()&&(e=e.sort(function(e,t){return e.name>t.name?1:e.name<t.name?-1:0})),this.map(e,function(e){var t=this.map(e,function(e){return[e.type,e.suffixes].join(\"~\")}).join(\",\");return[e.name,e.description,t].join(\"::\")},this)},getIEPlugins:function(){var e=[];if(Object.getOwnPropertyDescriptor&&Object.getOwnPropertyDescriptor(window,\"ActiveXObject\")||\"ActiveXObject\"in window){var t=[\"AcroPDF.PDF\",\"Adodb.Stream\",\"AgControl.AgControl\",\"DevalVRXCtrl.DevalVRXCtrl.1\",\"MacromediaFlashPaper.MacromediaFlashPaper\",\"Msxml2.DOMDocument\",\"Msxml2.XMLHTTP\",\"PDF.PdfCtrl\",\"QuickTime.QuickTime\",\"QuickTimeCheckObject.QuickTimeCheck.1\",\"RealPlayer\",\"RealPlayer.RealPlayer(tm) ActiveX Control (32-bit)\",\"RealVideo.RealVideo(tm) ActiveX Control (32-bit)\",\"Scripting.Dictionary\",\"SWCtl.SWCtl\",\"Shell.UIHelper\",\"ShockwaveFlash.ShockwaveFlash\",\"Skype.Detection\",\"TDCCtl.TDCCtl\",\"WMPlayer.OCX\",\"rmocx.RealPlayer G2 Control\",\"rmocx.RealPlayer G2 Control.1\"];e=this.map(t,function(e){try{return new ActiveXObject(e),e}catch(t){return null}})}return navigator.plugins&&(e=e.concat(this.getRegularPlugins())),e},pluginsShouldBeSorted:function(){for(var e=!1,t=0,i=this.options.sortPluginsFor.length;t<i;t++){var a=this.options.sortPluginsFor[t];if(navigator.userAgent.match(a)){e=!0;break}}return e},touchSupportKey:function(e){return this.options.excludeTouchSupport||e.push({key:\"touch_support\",value:this.getTouchSupport()}),e},hardwareConcurrencyKey:function(e){return this.options.excludeHardwareConcurrency||e.push({key:\"hardware_concurrency\",value:this.getHardwareConcurrency()}),e},hasSessionStorage:function(){try{return!!window.sessionStorage}catch(e){return!0}},hasLocalStorage:function(){try{return!!window.localStorage}catch(e){return!0}},hasIndexedDB:function(){try{return!!window.indexedDB}catch(e){return!0}},getHardwareConcurrency:function(){return navigator.hardwareConcurrency?navigator.hardwareConcurrency:\"unknown\"},getNavigatorCpuClass:function(){return navigator.cpuClass?navigator.cpuClass:\"unknown\"},getNavigatorPlatform:function(){return navigator.platform?navigator.platform:\"unknown\"},getDoNotTrack:function(){return navigator.doNotTrack?navigator.doNotTrack:navigator.msDoNotTrack?navigator.msDoNotTrack:window.doNotTrack?window.doNotTrack:\"unknown\"},getTouchSupport:function(){var e=0,t=!1;\"undefined\"!=typeof navigator.maxTouchPoints?e=navigator.maxTouchPoints:\"undefined\"!=typeof navigator.msMaxTouchPoints&&(e=navigator.msMaxTouchPoints);try{document.createEvent(\"TouchEvent\"),t=!0}catch(i){}var a=\"ontouchstart\"in window;return[e,t,a]},getCanvasFp:function(){var e=[],t=document.createElement(\"canvas\");t.width=2e3,t.height=200,t.style.display=\"inline\";var i=t.getContext(\"2d\");return i.rect(0,0,10,10),i.rect(2,2,6,6),e.push(\"canvas winding:\"+(i.isPointInPath(5,5,\"evenodd\")===!1?\"yes\":\"no\")),i.textBaseline=\"alphabetic\",i.fillStyle=\"#f60\",i.fillRect(125,1,62,20),i.fillStyle=\"#069\",this.options.dontUseFakeFontInCanvas?i.font=\"11pt Arial\":i.font=\"11pt no-real-font-123\",i.fillText(\"Cwm fjordbank glyphs vext quiz, \\ud83d\\ude03\",2,15),i.fillStyle=\"rgba(102, 204, 0, 0.2)\",i.font=\"18pt Arial\",i.fillText(\"Cwm fjordbank glyphs vext quiz, \\ud83d\\ude03\",4,45),i.globalCompositeOperation=\"multiply\",i.fillStyle=\"rgb(255,0,255)\",i.beginPath(),i.arc(50,50,50,0,2*Math.PI,!0),i.closePath(),i.fill(),i.fillStyle=\"rgb(0,255,255)\",i.beginPath(),i.arc(100,50,50,0,2*Math.PI,!0),i.closePath(),i.fill(),i.fillStyle=\"rgb(255,255,0)\",i.beginPath(),i.arc(75,100,50,0,2*Math.PI,!0),i.closePath(),i.fill(),i.fillStyle=\"rgb(255,0,255)\",i.arc(75,75,75,0,2*Math.PI,!0),i.arc(75,75,25,0,2*Math.PI,!0),i.fill(\"evenodd\"),e.push(\"canvas fp:\"+t.toDataURL()),e.join(\"~\")},getWebglFp:function(){var e,t=function(t){return e.clearColor(0,0,0,1),e.enable(e.DEPTH_TEST),e.depthFunc(e.LEQUAL),e.clear(e.COLOR_BUFFER_BIT|e.DEPTH_BUFFER_BIT),\"[\"+t[0]+\", \"+t[1]+\"]\"},i=function(e){var t,i=e.getExtension(\"EXT_texture_filter_anisotropic\")||e.getExtension(\"WEBKIT_EXT_texture_filter_anisotropic\")||e.getExtension(\"MOZ_EXT_texture_filter_anisotropic\");return i?(t=e.getParameter(i.MAX_TEXTURE_MAX_ANISOTROPY_EXT),0===t&&(t=2),t):null};if(e=this.getWebglCanvas(),!e)return null;var a=[],r=\"attribute vec2 attrVertex;varying vec2 varyinTexCoordinate;uniform vec2 uniformOffset;void main(){varyinTexCoordinate=attrVertex+uniformOffset;gl_Position=vec4(attrVertex,0,1);}\",n=\"precision mediump float;varying vec2 varyinTexCoordinate;void main() {gl_FragColor=vec4(varyinTexCoordinate,0,1);}\",o=e.createBuffer();e.bindBuffer(e.ARRAY_BUFFER,o);var s=new Float32Array([-.2,-.9,0,.4,-.26,0,0,.732134444,0]);e.bufferData(e.ARRAY_BUFFER,s,e.STATIC_DRAW),o.itemSize=3,o.numItems=3;var l=e.createProgram(),h=e.createShader(e.VERTEX_SHADER);e.shaderSource(h,r),e.compileShader(h);var u=e.createShader(e.FRAGMENT_SHADER);e.shaderSource(u,n),e.compileShader(u),e.attachShader(l,h),e.attachShader(l,u),e.linkProgram(l),e.useProgram(l),l.vertexPosAttrib=e.getAttribLocation(l,\"attrVertex\"),l.offsetUniform=e.getUniformLocation(l,\"uniformOffset\"),e.enableVertexAttribArray(l.vertexPosArray),e.vertexAttribPointer(l.vertexPosAttrib,o.itemSize,e.FLOAT,!1,0,0),e.uniform2f(l.offsetUniform,1,1),e.drawArrays(e.TRIANGLE_STRIP,0,o.numItems),null!=e.canvas&&a.push(e.canvas.toDataURL()),a.push(\"extensions:\"+e.getSupportedExtensions().join(\";\")),a.push(\"webgl aliased line width range:\"+t(e.getParameter(e.ALIASED_LINE_WIDTH_RANGE))),a.push(\"webgl aliased point size range:\"+t(e.getParameter(e.ALIASED_POINT_SIZE_RANGE))),a.push(\"webgl alpha bits:\"+e.getParameter(e.ALPHA_BITS)),a.push(\"webgl antialiasing:\"+(e.getContextAttributes().antialias?\"yes\":\"no\")),a.push(\"webgl blue bits:\"+e.getParameter(e.BLUE_BITS)),a.push(\"webgl depth bits:\"+e.getParameter(e.DEPTH_BITS)),a.push(\"webgl green bits:\"+e.getParameter(e.GREEN_BITS)),a.push(\"webgl max anisotropy:\"+i(e)),a.push(\"webgl max combined texture image units:\"+e.getParameter(e.MAX_COMBINED_TEXTURE_IMAGE_UNITS)),a.push(\"webgl max cube map texture size:\"+e.getParameter(e.MAX_CUBE_MAP_TEXTURE_SIZE)),a.push(\"webgl max fragment uniform vectors:\"+e.getParameter(e.MAX_FRAGMENT_UNIFORM_VECTORS)),a.push(\"webgl max render buffer size:\"+e.getParameter(e.MAX_RENDERBUFFER_SIZE)),a.push(\"webgl max texture image units:\"+e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)),a.push(\"webgl max texture size:\"+e.getParameter(e.MAX_TEXTURE_SIZE)),a.push(\"webgl max varying vectors:\"+e.getParameter(e.MAX_VARYING_VECTORS)),a.push(\"webgl max vertex attribs:\"+e.getParameter(e.MAX_VERTEX_ATTRIBS)),a.push(\"webgl max vertex texture image units:\"+e.getParameter(e.MAX_VERTEX_TEXTURE_IMAGE_UNITS)),a.push(\"webgl max vertex uniform vectors:\"+e.getParameter(e.MAX_VERTEX_UNIFORM_VECTORS)),a.push(\"webgl max viewport dims:\"+t(e.getParameter(e.MAX_VIEWPORT_DIMS))),a.push(\"webgl red bits:\"+e.getParameter(e.RED_BITS)),a.push(\"webgl renderer:\"+e.getParameter(e.RENDERER)),a.push(\"webgl shading language version:\"+e.getParameter(e.SHADING_LANGUAGE_VERSION)),a.push(\"webgl stencil bits:\"+e.getParameter(e.STENCIL_BITS)),a.push(\"webgl vendor:\"+e.getParameter(e.VENDOR)),a.push(\"webgl version:\"+e.getParameter(e.VERSION));try{var c=e.getExtension(\"WEBGL_debug_renderer_info\");c&&(a.push(\"webgl unmasked vendor:\"+e.getParameter(c.UNMASKED_VENDOR_WEBGL)),a.push(\"webgl unmasked renderer:\"+e.getParameter(c.UNMASKED_RENDERER_WEBGL)))}catch(d){}return e.getShaderPrecisionFormat?(a.push(\"webgl vertex shader high float precision:\"+e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.HIGH_FLOAT).precision),a.push(\"webgl vertex shader high float precision rangeMin:\"+e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.HIGH_FLOAT).rangeMin),a.push(\"webgl vertex shader high float precision rangeMax:\"+e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.HIGH_FLOAT).rangeMax),a.push(\"webgl vertex shader medium float precision:\"+e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.MEDIUM_FLOAT).precision),a.push(\"webgl vertex shader medium float precision rangeMin:\"+e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.MEDIUM_FLOAT).rangeMin),a.push(\"webgl vertex shader medium float precision rangeMax:\"+e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.MEDIUM_FLOAT).rangeMax),a.push(\"webgl vertex shader low float precision:\"+e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.LOW_FLOAT).precision),a.push(\"webgl vertex shader low float precision rangeMin:\"+e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.LOW_FLOAT).rangeMin),a.push(\"webgl vertex shader low float precision rangeMax:\"+e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.LOW_FLOAT).rangeMax),a.push(\"webgl fragment shader high float precision:\"+e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.HIGH_FLOAT).precision),a.push(\"webgl fragment shader high float precision rangeMin:\"+e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.HIGH_FLOAT).rangeMin),a.push(\"webgl fragment shader high float precision rangeMax:\"+e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.HIGH_FLOAT).rangeMax),a.push(\"webgl fragment shader medium float precision:\"+e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.MEDIUM_FLOAT).precision),a.push(\"webgl fragment shader medium float precision rangeMin:\"+e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.MEDIUM_FLOAT).rangeMin),a.push(\"webgl fragment shader medium float precision rangeMax:\"+e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.MEDIUM_FLOAT).rangeMax),a.push(\"webgl fragment shader low float precision:\"+e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.LOW_FLOAT).precision),a.push(\"webgl fragment shader low float precision rangeMin:\"+e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.LOW_FLOAT).rangeMin),a.push(\"webgl fragment shader low float precision rangeMax:\"+e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.LOW_FLOAT).rangeMax),a.push(\"webgl vertex shader high int precision:\"+e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.HIGH_INT).precision),a.push(\"webgl vertex shader high int precision rangeMin:\"+e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.HIGH_INT).rangeMin),a.push(\"webgl vertex shader high int precision rangeMax:\"+e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.HIGH_INT).rangeMax),a.push(\"webgl vertex shader medium int precision:\"+e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.MEDIUM_INT).precision),a.push(\"webgl vertex shader medium int precision rangeMin:\"+e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.MEDIUM_INT).rangeMin),a.push(\"webgl vertex shader medium int precision rangeMax:\"+e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.MEDIUM_INT).rangeMax),a.push(\"webgl vertex shader low int precision:\"+e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.LOW_INT).precision),a.push(\"webgl vertex shader low int precision rangeMin:\"+e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.LOW_INT).rangeMin),a.push(\"webgl vertex shader low int precision rangeMax:\"+e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.LOW_INT).rangeMax),a.push(\"webgl fragment shader high int precision:\"+e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.HIGH_INT).precision),a.push(\"webgl fragment shader high int precision rangeMin:\"+e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.HIGH_INT).rangeMin),a.push(\"webgl fragment shader high int precision rangeMax:\"+e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.HIGH_INT).rangeMax),a.push(\"webgl fragment shader medium int precision:\"+e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.MEDIUM_INT).precision),a.push(\"webgl fragment shader medium int precision rangeMin:\"+e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.MEDIUM_INT).rangeMin),a.push(\"webgl fragment shader medium int precision rangeMax:\"+e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.MEDIUM_INT).rangeMax),a.push(\"webgl fragment shader low int precision:\"+e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.LOW_INT).precision),a.push(\"webgl fragment shader low int precision rangeMin:\"+e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.LOW_INT).rangeMin),a.push(\"webgl fragment shader low int precision rangeMax:\"+e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.LOW_INT).rangeMax),a.join(\"~\")):a.join(\"~\")},getAdBlock:function(){var e=document.createElement(\"div\");e.innerHTML=\"&nbsp;\",e.className=\"adsbox\";var t=!1;try{document.body.appendChild(e),t=0===document.getElementsByClassName(\"adsbox\")[0].offsetHeight,document.body.removeChild(e)}catch(i){t=!1}return t},getHasLiedLanguages:function(){if(\"undefined\"!=typeof navigator.languages)try{var e=navigator.languages[0].substr(0,2);if(e!==navigator.language.substr(0,2))return!0}catch(t){return!0}return!1},getHasLiedResolution:function(){return screen.width<screen.availWidth||screen.height<screen.availHeight},getHasLiedOs:function(){var e,t=navigator.userAgent.toLowerCase(),i=navigator.oscpu,a=navigator.platform.toLowerCase();e=t.indexOf(\"windows phone\")>=0?\"Windows Phone\":t.indexOf(\"win\")>=0?\"Windows\":t.indexOf(\"android\")>=0?\"Android\":t.indexOf(\"linux\")>=0?\"Linux\":t.indexOf(\"iphone\")>=0||t.indexOf(\"ipad\")>=0?\"iOS\":t.indexOf(\"mac\")>=0?\"Mac\":\"Other\";var r;if(r=\"ontouchstart\"in window||navigator.maxTouchPoints>0||navigator.msMaxTouchPoints>0,r&&\"Windows Phone\"!==e&&\"Android\"!==e&&\"iOS\"!==e&&\"Other\"!==e)return!0;if(\"undefined\"!=typeof i){if(i=i.toLowerCase(),i.indexOf(\"win\")>=0&&\"Windows\"!==e&&\"Windows Phone\"!==e)return!0;if(i.indexOf(\"linux\")>=0&&\"Linux\"!==e&&\"Android\"!==e)return!0;if(i.indexOf(\"mac\")>=0&&\"Mac\"!==e&&\"iOS\"!==e)return!0;if(0===i.indexOf(\"win\")&&0===i.indexOf(\"linux\")&&i.indexOf(\"mac\")>=0&&\"other\"!==e)return!0}return a.indexOf(\"win\")>=0&&\"Windows\"!==e&&\"Windows Phone\"!==e||((a.indexOf(\"linux\")>=0||a.indexOf(\"android\")>=0||a.indexOf(\"pike\")>=0)&&\"Linux\"!==e&&\"Android\"!==e||((a.indexOf(\"mac\")>=0||a.indexOf(\"ipad\")>=0||a.indexOf(\"ipod\")>=0||a.indexOf(\"iphone\")>=0)&&\"Mac\"!==e&&\"iOS\"!==e||(0===a.indexOf(\"win\")&&0===a.indexOf(\"linux\")&&a.indexOf(\"mac\")>=0&&\"other\"!==e||\"undefined\"==typeof navigator.plugins&&\"Windows\"!==e&&\"Windows Phone\"!==e)))},getHasLiedBrowser:function(){var e,t=navigator.userAgent.toLowerCase(),i=navigator.productSub;if(e=t.indexOf(\"firefox\")>=0?\"Firefox\":t.indexOf(\"opera\")>=0||t.indexOf(\"opr\")>=0?\"Opera\":t.indexOf(\"chrome\")>=0?\"Chrome\":t.indexOf(\"safari\")>=0?\"Safari\":t.indexOf(\"trident\")>=0?\"Internet Explorer\":\"Other\",(\"Chrome\"===e||\"Safari\"===e||\"Opera\"===e)&&\"20030107\"!==i)return!0;var a=eval.toString().length;if(37===a&&\"Safari\"!==e&&\"Firefox\"!==e&&\"Other\"!==e)return!0;if(39===a&&\"Internet Explorer\"!==e&&\"Other\"!==e)return!0;if(33===a&&\"Chrome\"!==e&&\"Opera\"!==e&&\"Other\"!==e)return!0;var r;try{throw\"a\"}catch(n){try{n.toSource(),r=!0}catch(o){r=!1}}return!(!r||\"Firefox\"===e||\"Other\"===e)},isCanvasSupported:function(){var e=document.createElement(\"canvas\");return!(!e.getContext||!e.getContext(\"2d\"))},isWebGlSupported:function(){if(!this.isCanvasSupported())return!1;var e,t=document.createElement(\"canvas\");try{e=t.getContext&&(t.getContext(\"webgl\")||t.getContext(\"experimental-webgl\"))}catch(i){e=!1}return!!window.WebGLRenderingContext&&!!e},isIE:function(){return\"Microsoft Internet Explorer\"===navigator.appName||!(\"Netscape\"!==navigator.appName||!/Trident/.test(navigator.userAgent))},hasSwfObjectLoaded:function(){return\"undefined\"!=typeof window.swfobject},hasMinFlashInstalled:function(){return swfobject.hasFlashPlayerVersion(\"9.0.0\")},addFlashDivNode:function(){var e=document.createElement(\"div\");e.setAttribute(\"id\",this.options.swfContainerId),document.body.appendChild(e)},loadSwfAndDetectFonts:function(e){var t=\"___fp_swf_loaded\";window[t]=function(t){e(t)};var i=this.options.swfContainerId;this.addFlashDivNode();var a={onReady:t},r={allowScriptAccess:\"always\",menu:\"false\"};swfobject.embedSWF(this.options.swfPath,i,\"1\",\"1\",\"9.0.0\",!1,a,r,{})},getWebglCanvas:function(){var e=document.createElement(\"canvas\"),t=null;try{t=e.getContext(\"webgl\")||e.getContext(\"experimental-webgl\")}catch(i){}return t||(t=null),t},each:function(e,t,i){if(null!==e)if(this.nativeForEach&&e.forEach===this.nativeForEach)e.forEach(t,i);else if(e.length===+e.length){for(var a=0,r=e.length;a<r;a++)if(t.call(i,e[a],a,e)==={})return}else for(var n in e)if(e.hasOwnProperty(n)&&t.call(i,e[n],n,e)==={})return},map:function(e,t,i){var a=[];return null==e?a:this.nativeMap&&e.map===this.nativeMap?e.map(t,i):(this.each(e,function(e,r,n){a[a.length]=t.call(i,e,r,n)}),a)},x64Add:function(e,t){e=[e[0]>>>16,65535&e[0],e[1]>>>16,65535&e[1]],t=[t[0]>>>16,65535&t[0],t[1]>>>16,65535&t[1]];var i=[0,0,0,0];return i[3]+=e[3]+t[3],i[2]+=i[3]>>>16,i[3]&=65535,i[2]+=e[2]+t[2],i[1]+=i[2]>>>16,i[2]&=65535,i[1]+=e[1]+t[1],i[0]+=i[1]>>>16,i[1]&=65535,i[0]+=e[0]+t[0],i[0]&=65535,[i[0]<<16|i[1],i[2]<<16|i[3]]},x64Multiply:function(e,t){e=[e[0]>>>16,65535&e[0],e[1]>>>16,65535&e[1]],t=[t[0]>>>16,65535&t[0],t[1]>>>16,65535&t[1]];var i=[0,0,0,0];return i[3]+=e[3]*t[3],i[2]+=i[3]>>>16,i[3]&=65535,i[2]+=e[2]*t[3],i[1]+=i[2]>>>16,i[2]&=65535,i[2]+=e[3]*t[2],i[1]+=i[2]>>>16,i[2]&=65535,i[1]+=e[1]*t[3],i[0]+=i[1]>>>16,i[1]&=65535,i[1]+=e[2]*t[2],i[0]+=i[1]>>>16,i[1]&=65535,i[1]+=e[3]*t[1],i[0]+=i[1]>>>16,i[1]&=65535,i[0]+=e[0]*t[3]+e[1]*t[2]+e[2]*t[1]+e[3]*t[0],i[0]&=65535,[i[0]<<16|i[1],i[2]<<16|i[3]]},x64Rotl:function(e,t){return t%=64,32===t?[e[1],e[0]]:t<32?[e[0]<<t|e[1]>>>32-t,e[1]<<t|e[0]>>>32-t]:(t-=32,[e[1]<<t|e[0]>>>32-t,e[0]<<t|e[1]>>>32-t])},x64LeftShift:function(e,t){return t%=64,0===t?e:t<32?[e[0]<<t|e[1]>>>32-t,e[1]<<t]:[e[1]<<t-32,0]},x64Xor:function(e,t){return[e[0]^t[0],e[1]^t[1]]},x64Fmix:function(e){return e=this.x64Xor(e,[0,e[0]>>>1]),e=this.x64Multiply(e,[4283543511,3981806797]),e=this.x64Xor(e,[0,e[0]>>>1]),e=this.x64Multiply(e,[3301882366,444984403]),e=this.x64Xor(e,[0,e[0]>>>1])},x64hash128:function(e,t){\ne=e||\"\",t=t||0;for(var i=e.length%16,a=e.length-i,r=[0,t],n=[0,t],o=[0,0],s=[0,0],l=[2277735313,289559509],h=[1291169091,658871167],u=0;u<a;u+=16)o=[255&e.charCodeAt(u+4)|(255&e.charCodeAt(u+5))<<8|(255&e.charCodeAt(u+6))<<16|(255&e.charCodeAt(u+7))<<24,255&e.charCodeAt(u)|(255&e.charCodeAt(u+1))<<8|(255&e.charCodeAt(u+2))<<16|(255&e.charCodeAt(u+3))<<24],s=[255&e.charCodeAt(u+12)|(255&e.charCodeAt(u+13))<<8|(255&e.charCodeAt(u+14))<<16|(255&e.charCodeAt(u+15))<<24,255&e.charCodeAt(u+8)|(255&e.charCodeAt(u+9))<<8|(255&e.charCodeAt(u+10))<<16|(255&e.charCodeAt(u+11))<<24],o=this.x64Multiply(o,l),o=this.x64Rotl(o,31),o=this.x64Multiply(o,h),r=this.x64Xor(r,o),r=this.x64Rotl(r,27),r=this.x64Add(r,n),r=this.x64Add(this.x64Multiply(r,[0,5]),[0,1390208809]),s=this.x64Multiply(s,h),s=this.x64Rotl(s,33),s=this.x64Multiply(s,l),n=this.x64Xor(n,s),n=this.x64Rotl(n,31),n=this.x64Add(n,r),n=this.x64Add(this.x64Multiply(n,[0,5]),[0,944331445]);switch(o=[0,0],s=[0,0],i){case 15:s=this.x64Xor(s,this.x64LeftShift([0,e.charCodeAt(u+14)],48));case 14:s=this.x64Xor(s,this.x64LeftShift([0,e.charCodeAt(u+13)],40));case 13:s=this.x64Xor(s,this.x64LeftShift([0,e.charCodeAt(u+12)],32));case 12:s=this.x64Xor(s,this.x64LeftShift([0,e.charCodeAt(u+11)],24));case 11:s=this.x64Xor(s,this.x64LeftShift([0,e.charCodeAt(u+10)],16));case 10:s=this.x64Xor(s,this.x64LeftShift([0,e.charCodeAt(u+9)],8));case 9:s=this.x64Xor(s,[0,e.charCodeAt(u+8)]),s=this.x64Multiply(s,h),s=this.x64Rotl(s,33),s=this.x64Multiply(s,l),n=this.x64Xor(n,s);case 8:o=this.x64Xor(o,this.x64LeftShift([0,e.charCodeAt(u+7)],56));case 7:o=this.x64Xor(o,this.x64LeftShift([0,e.charCodeAt(u+6)],48));case 6:o=this.x64Xor(o,this.x64LeftShift([0,e.charCodeAt(u+5)],40));case 5:o=this.x64Xor(o,this.x64LeftShift([0,e.charCodeAt(u+4)],32));case 4:o=this.x64Xor(o,this.x64LeftShift([0,e.charCodeAt(u+3)],24));case 3:o=this.x64Xor(o,this.x64LeftShift([0,e.charCodeAt(u+2)],16));case 2:o=this.x64Xor(o,this.x64LeftShift([0,e.charCodeAt(u+1)],8));case 1:o=this.x64Xor(o,[0,e.charCodeAt(u)]),o=this.x64Multiply(o,l),o=this.x64Rotl(o,31),o=this.x64Multiply(o,h),r=this.x64Xor(r,o)}return r=this.x64Xor(r,[0,e.length]),n=this.x64Xor(n,[0,e.length]),r=this.x64Add(r,n),n=this.x64Add(n,r),r=this.x64Fmix(r),n=this.x64Fmix(n),r=this.x64Add(r,n),n=this.x64Add(n,r),(\"00000000\"+(r[0]>>>0).toString(16)).slice(-8)+(\"00000000\"+(r[1]>>>0).toString(16)).slice(-8)+(\"00000000\"+(n[0]>>>0).toString(16)).slice(-8)+(\"00000000\"+(n[1]>>>0).toString(16)).slice(-8)}},e.VERSION=\"1.5.1\",e});\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017-2021 (original work) Open Assessment Technologies SA ;\n */\ndefine('taoClientDiagnostic/tools/fingerprint/tester',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'util/url',\n    'core/logger',\n    'core/store',\n    'core/format',\n    'lib/uuid',\n    'taoClientDiagnostic/tools/getConfig',\n    'taoClientDiagnostic/tools/getLabels',\n    'taoClientDiagnostic/tools/getStatus',\n    'taoClientDiagnostic/lib/fingerprint/fingerprint2'\n], function($, _, __, url, loggerFactory, store, format, uuid, getConfig, getLabels, getStatus, Fingerprint2) {\n    'use strict';\n\n    /**\n     * @type {logger}\n     * @private\n     */\n    const logger = loggerFactory('taoClientDiagnostic/fingerprint');\n\n    /**\n     * Some default values\n     * @type {object}\n     * @private\n     */\n    const _defaults = {\n        id: 'fingerprint'\n    };\n\n    /**\n     * The names of the storage keys used to persist info on the browser\n     * @type {object}\n     * @private\n     */\n    const _storageKeys = {\n        store: 'client-diagnostic',\n        uuid: 'uuid',\n        fingerprint: 'value',\n        details: 'details',\n        errors: 'errors',\n        changed: 'changed'\n    };\n\n    /**\n     * List of threshold values, for each kind of context\n     * @type {object}\n     * @private\n     */\n    const _thresholdValues = {\n        error: 0,\n        storageIssue: 50,\n        changedFingerprint: 90,\n        success: 100\n    };\n\n    /**\n     * A list of thresholds\n     * @type {Array}\n     * @private\n     */\n    const _thresholds = [\n        {\n            threshold: _thresholdValues.error,\n            message: __('Cannot get your fingerprint'),\n            type: 'error'\n        },\n        {\n            threshold: _thresholdValues.storageIssue,\n            message: __(\n                'Your fingerprint is %s. However we encountered issue while retrieving the data. Maybe your available disk space is too small'\n            ),\n            type: 'warning'\n        },\n        {\n            threshold: _thresholdValues.changedFingerprint,\n            message: __(\n                'Your fingerprint is %s. However it seems it has changed since the last check. It could be related to changes in your system.'\n            ),\n            type: 'success'\n        },\n        {\n            threshold: _thresholdValues.success,\n            message: __('Your fingerprint is %s'),\n            type: 'success'\n        }\n    ];\n\n    /**\n     * List of translated texts per level.\n     * The level is provided through the config as a numeric value, starting from 1.\n     * @type {object}\n     * @private\n     */\n    const _messages = [\n        // level 1\n        {\n            title: __('Fingerprint'),\n            status: __('Computing the fingerprint...'),\n            fingerprintValue: __('Fingerprint'),\n            fingerprintUUID: __('Dynamic UID'),\n            fingerprintDetails: __('Fingerprint sources'),\n            fingerprintChanged: __('Change since last fingerprint'),\n            fingerprintErrors: __('Fingerprint errors'),\n            fingerprintError: __('Fingerprint error')\n        }\n    ];\n\n    /**\n     * Performs a browser fingerprint capture\n     *\n     * @param {object} config - Some optional configs\n     * @param {string} [config.id] - The identifier of the test\n     * @param {string} [config.level] - The intensity level of the test. It will aim which messages list to use.\n     * @returns {object}\n     */\n    return function browserFingerprint(config) {\n        const initConfig = getConfig(config, _defaults);\n        const labels = getLabels(_messages, initConfig.level);\n\n        return {\n            /**\n             * Performs a browser fingerprint capture, then call a function to provide the result\n             * @param {Function} done\n             */\n            start(done) {\n                let browserId = 'error';\n                let lastFingerprint = 'error';\n                let freshBrowserId = false;\n                let newFingerprint = false;\n                let browserStorage;\n                const errors = [];\n\n                function handleError(error) {\n                    errors.push({\n                        key: 'error',\n                        value: '' + error\n                    });\n                    logger.error(error);\n                }\n\n                function getStorageKey(key) {\n                    return `${initConfig.id}-${_storageKeys[key]}`;\n                }\n\n                store(_storageKeys.store)\n                    .then(storage => {\n                        browserStorage = storage;\n                        return Promise.all([\n                            browserStorage.getItem(getStorageKey('uuid')).then(value => {\n                                browserId = value;\n                            }),\n                            browserStorage.getItem(getStorageKey('fingerprint')).then(value => {\n                                lastFingerprint = value;\n                            })\n                        ]);\n                    })\n                    .catch(handleError)\n                    .then(() => {\n                        return new Promise(resolve => {\n                            new Fingerprint2().get((result, details) => {\n                                const results = {};\n                                results[_storageKeys.fingerprint] = ('' + result).toUpperCase();\n                                results[_storageKeys.details] = details;\n                                resolve(results);\n                            });\n                        });\n                    })\n                    .then(results => {\n                        const pendingPromises = [];\n                        const resultFingerprint = results[_storageKeys.fingerprint];\n\n                        if (!browserId) {\n                            browserId = uuid(32, 16);\n                            freshBrowserId = true;\n                        }\n\n                        newFingerprint = lastFingerprint !== resultFingerprint && lastFingerprint !== 'error';\n\n                        // update the results with storage state\n                        // also detect a change in the fingerprint\n                        // (if the browser already have a uuid in the storage but the fingerprint changes)\n                        results[_storageKeys.uuid] = browserId;\n                        results[_storageKeys.changed] = newFingerprint && !freshBrowserId;\n\n                        if (browserStorage) {\n                            if (freshBrowserId) {\n                                pendingPromises.push(browserStorage.setItem(getStorageKey('uuid'), browserId));\n                            }\n                            if (newFingerprint) {\n                                pendingPromises.push(\n                                    browserStorage.setItem(getStorageKey('fingerprint'), resultFingerprint)\n                                );\n                            }\n                        }\n\n                        return Promise.all(pendingPromises)\n                            .catch(handleError)\n                            .then(() => results);\n                    })\n                    .catch(handleError)\n                    .then(results => {\n                        results = results || {};\n                        if (errors.length) {\n                            results[_storageKeys.errors] = errors.length;\n                            results[_storageKeys.details] = (results[_storageKeys.details] || []).concat(errors);\n                        }\n\n                        const summary = this.getSummary(results);\n                        const status = this.getFeedback(results);\n                        done(status, summary, results);\n                    });\n            },\n\n            /**\n             * Gets the labels loaded for the tester\n             * @returns {object}\n             */\n            get labels() {\n                return labels;\n            },\n\n            /**\n             * Builds the results summary\n             * @param {object} results\n             * @returns {object}\n             */\n            getSummary(results) {\n                const sources = _(results[_storageKeys.details])\n                    .map('key')\n                    .pull('error')\n                    .value();\n                const summary = {\n                    fingerprintValue: {\n                        message: labels.fingerprintValue,\n                        value: results[_storageKeys.fingerprint]\n                    },\n                    fingerprintDetails: {\n                        message: labels.fingerprintDetails,\n                        value: __('%d sources (%s)', _.size(sources), sources.join(', '))\n                    },\n                    fingerprintChanged: {\n                        message: labels.fingerprintChanged,\n                        value: results[_storageKeys.changed] ? __('Yes') : __('No')\n                    }\n                };\n\n                if (results[_storageKeys.errors]) {\n                    summary.fingerprintErrors = {\n                        message: labels.fingerprintErrors,\n                        value: results[_storageKeys.errors]\n                    };\n\n                    _.forEach(results[_storageKeys.details], (details, idx) => {\n                        if (details.key === 'error') {\n                            summary['fingerprintError' + idx] = {\n                                message: labels.fingerprintError,\n                                value: details.value\n                            };\n                        }\n                    });\n                }\n\n                return summary;\n            },\n\n            /**\n             * Gets the feedback status for the provided result value\n             * @param {object} results\n             * @returns {object}\n             */\n            getFeedback(results) {\n                let percentage;\n\n                if (!results || !results[_storageKeys.fingerprint] || results[_storageKeys.fingerprint] === 'error') {\n                    percentage = _thresholdValues.error;\n                } else if (results[_storageKeys.uuid] === 'error') {\n                    percentage = _thresholdValues.storageIssue;\n                } else if (results[_storageKeys.changed]) {\n                    percentage = _thresholdValues.changedFingerprint;\n                } else {\n                    percentage = _thresholdValues.success;\n                }\n\n                const status = getStatus(percentage, _thresholds);\n                status.id = initConfig.id;\n                status.title = labels.title;\n                status.feedback.message = format(status.feedback.message, results && results[_storageKeys.fingerprint]);\n\n                return status;\n            }\n        };\n    };\n});\n\n","\ndefine('tpl!taoClientDiagnostic/tools/diagnostic/tpl/fingerprint', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var stack1, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, self=this, functionType=\"function\";\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", stack1, helper, options;\n  buffer += \"\\n<span class=\\\"detailed-value\";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.errors), {hash:{},inverse:self.noop,fn:self.program(2, program2, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\\"\";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.errors), {hash:{},inverse:self.noop,fn:self.program(4, program4, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \">\\n    <span class=\\\"value\\\">\";\n  if (helper = helpers.value) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.value); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1);\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.errors), {hash:{},inverse:self.noop,fn:self.program(6, program6, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"</span>\\n    <span class=\\\"details icon-info\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Show fingerprint details\", options) : helperMissing.call(depth0, \"__\", \"Show fingerprint details\", options)))\n    + \"\\\"></span>\\n    </span>\\n\";\n  return buffer;\n  }\nfunction program2(depth0,data) {\n  \n  \n  return \" errors\";\n  }\n\nfunction program4(depth0,data) {\n  \n  var buffer = \"\", helper, options;\n  buffer += \" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Errors occurred! Please see details\", options) : helperMissing.call(depth0, \"__\", \"Errors occurred! Please see details\", options)))\n    + \"\\\"\";\n  return buffer;\n  }\n\nfunction program6(depth0,data) {\n  \n  \n  return \" <span class=\\\"icon-warning\\\"></span>\";\n  }\n\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.value), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { return stack1; }\n  else { return ''; }\n  });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016-2021 (original work) Open Assessment Technologies SA ;\n */\ndefine('taoClientDiagnostic/tools/csvExporter',['jquery', 'lodash', 'i18n', 'core/request', 'layout/loading-bar', 'helpers'], function(\n    $,\n    _,\n    __,\n    request,\n    loadingBar,\n    helpers\n) {\n    'use strict';\n\n    /**\n     * The CSS scope\n     * @type {string}\n     * @private\n     */\n    const cssScope = '.diagnostic-index';\n\n    /**\n     * Export diagnostics to CSV\n     * @type {object}\n     */\n    return {\n        /**\n         * Exports all diagnostics to CSV\n         * @param {Array} model - data presentation model\n         */\n        exportCsv(model) {\n            const $container = $(cssScope);\n            const extension = $container.data('extension') || 'taoClientDiagnostic';\n            const serviceUrl = helpers._url('diagnosticData', 'Diagnostic', extension);\n\n            // filtering and transforming diagnostic data according to the model\n            function mappingDiagnosticsData(diagnostics) {\n                return diagnostics.map(diagnostic => {\n                    const result = {};\n                    _.forEach(model, field => {\n                        result[field.id] = field.transform\n                            ? field.transform(diagnostic[field.id], diagnostic)\n                            : diagnostic[field.id];\n                    });\n                    return result;\n                });\n            }\n\n            // a string variable is created containing the contents of the csv file\n            function arrayToCsv(data, columnDelimiter = ',', lineDelimiter = '\\n') {\n                const keys = Object.keys(data[0]);\n                let result = `${keys.join(columnDelimiter)}${lineDelimiter}`;\n                data.forEach(item => {\n                    let ctr = 0;\n                    keys.forEach(key => {\n                        if (ctr > 0) {\n                            result += columnDelimiter;\n                        }\n                        result +=\n                            typeof item[key] === 'string' && item[key].includes(columnDelimiter)\n                                ? `\"${item[key]}\"`\n                                : item[key];\n                        ctr++;\n                    });\n                    result += lineDelimiter;\n                });\n                return result;\n            }\n\n            // file download from content\n            function downloadFile(content, filename, type) {\n                const blob = new Blob([content], { type: type });\n                const url = URL.createObjectURL(blob);\n                let link = $('<a></a>');\n                link.attr('download', filename)\n                    .attr('href', url)\n                    .get(0)\n                    .click();\n\n                URL.revokeObjectURL(url);\n\n                link = null;\n            }\n\n            loadingBar.start();\n\n            request({\n                url: serviceUrl,\n                data: { rows: Number.MAX_SAFE_INTEGER },\n                noToken: true\n            })\n                .then(response => {\n                    const mappedData = mappingDiagnosticsData(response.data);\n                    let csvContent = arrayToCsv(mappedData);\n                    downloadFile(csvContent, __('diagnostics.csv'), 'text/csv');\n                    loadingBar.stop();\n                })\n                .catch(() => {\n                    loadingBar.stop();\n                });\n        }\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015-2021 (original work) Open Assessment Technologies SA ;\n */\ndefine('taoClientDiagnostic/controller/Diagnostic/index',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'helpers',\n    'moment',\n    'core/request',\n    'layout/loading-bar',\n    'util/encode',\n    'ui/feedback',\n    'ui/dialog',\n    'taoClientDiagnostic/tools/getStatus',\n    'taoClientDiagnostic/tools/performances/tester',\n    'taoClientDiagnostic/tools/fingerprint/tester',\n    'tpl!taoClientDiagnostic/tools/diagnostic/tpl/fingerprint',\n    'tpl!taoClientDiagnostic/tools/diagnostic/tpl/details',\n    'taoClientDiagnostic/tools/csvExporter',\n    'ui/datatable',\n    'lib/moment-timezone.min'\n], function(\n    $,\n    _,\n    __,\n    helpers,\n    moment,\n    request,\n    loadingBar,\n    encode,\n    feedback,\n    dialog,\n    getStatus,\n    performancesTesterFactory,\n    fingerprintTesterFactory,\n    fingerprintTpl,\n    detailsTpl,\n    csvExporter\n) {\n    'use strict';\n\n    /**\n     * The CSS scope\n     * @type {string}\n     * @private\n     */\n    const cssScope = '.diagnostic-index';\n\n    /**\n     * Default Time Zone for date\n     * @type {string}\n     * @private\n     */\n    const defaultDateTimeZone = 'UTC';\n\n    /**\n     * Default date format\n     * @type {string}\n     * @private\n     */\n    const defaultDateFormat = 'Y/MM/DD HH:mm:ss';\n\n    /**\n     * Format a number with decimals\n     * @param {number} value - The number to format\n     * @param {number|string} [digits] - The number of decimals\n     * @returns {number}\n     * @private\n     */\n    function formatNumber(value, digits) {\n        const nb = 'undefined' === typeof digits ? 2 : Math.max(0, parseInt(digits, 10));\n        const factor = Math.pow(10, nb) || 1;\n        return Math.round(value * factor) / factor;\n    }\n\n    /**\n     * Format a bandwidth value\n     * @param {number} value\n     * @returns {number|string}\n     * @private\n     */\n    function formatBandwidth(value) {\n        if (value > 100) {\n            return '> 100';\n        }\n\n        return formatNumber(value);\n    }\n\n    /**\n     * Transform date to local timezone\n     * @param {string} date\n     * @returns {string}\n     * @private\n     */\n    function transformDateToLocal(date) {\n        let time;\n\n        if (_.isFinite(date)) {\n            if (!_.isNumber(date)) {\n                date = _.parseInt(date, 10);\n            }\n            const d = new Date(date * 1000);\n            time = moment.utc(d);\n        } else {\n            time = moment.tz(date, defaultDateTimeZone);\n        }\n\n        return time.tz(moment.tz.guess()).format(defaultDateFormat);\n    }\n\n    // the page is always loading data when starting\n    loadingBar.start();\n\n    /**\n     * Controls the readiness check page\n     */\n    return {\n        /**\n         * Entry point of the page\n         */\n        start() {\n            const $container = $(cssScope);\n            const extension = $container.data('extension') || 'taoClientDiagnostic';\n            const $list = $container.find('.list');\n            let dataset = $container.data('set');\n            const extensionConfig = $container.data('config') || {};\n            const config = extensionConfig.diagnostic || extensionConfig;\n            const installedExtension = $container.data('installedextension') || false;\n            const diagnosticUrl = helpers._url('diagnostic', 'Diagnostic', extension);\n            const removeUrl = helpers._url('remove', 'Diagnostic', extension);\n            const serviceUrl = helpers._url('diagnosticData', 'Diagnostic', extension);\n            const performancesTester = performancesTesterFactory(config.testers.performance || {});\n            const fingerprintTester = fingerprintTesterFactory(config.testers.fingerprint || {});\n\n            const tools = [];\n            const actions = [];\n            const model = [];\n\n            // request the server with a selection of readiness check results\n            function requestData(url, selection, message) {\n                if (selection && selection.length) {\n                    loadingBar.start();\n\n                    request({\n                        url,\n                        data: {\n                            id: selection\n                        },\n                        method: 'POST',\n                        noToken: true\n                    })\n                        .then(response => {\n                            loadingBar.stop();\n\n                            if (response && response.success) {\n                                if (message) {\n                                    feedback().success(message);\n                                }\n                                $list.datatable('refresh');\n                            } else {\n                                feedback().error(\n                                    `${__('Something went wrong ...')}<br>${encode.html(response.error)}`,\n                                    {\n                                        encodeHtml: false\n                                    }\n                                );\n                            }\n                        })\n                        .catch(() => loadingBar.stop());\n                }\n            }\n\n            // request the server to remove the selected diagnostic-index\n            function remove(selection) {\n                requestData(removeUrl, selection, __('The readiness check result have been removed'));\n            }\n\n            // tool: page refresh\n            tools.push({\n                id: 'refresh',\n                icon: 'reset',\n                title: __('Refresh the page'),\n                label: __('Refresh'),\n                action() {\n                    $list.datatable('refresh');\n                }\n            });\n\n            // tool: readiness check\n            tools.push({\n                id: 'launch',\n                icon: 'play',\n                title: __('Launch another readiness check'),\n                label: __('Launch readiness check'),\n                action() {\n                    window.location.href = diagnosticUrl;\n                }\n            });\n\n            if (config.export) {\n                // tool: export csv\n                tools.push({\n                    id: 'csvExport',\n                    icon: 'export',\n                    title: __('Export CSV'),\n                    label: __('Export CSV'),\n                    action() {\n                        csvExporter.exportCsv(model);\n                    }\n                });\n            }\n\n            if (installedExtension) {\n                // tool: compatibility via lti\n                tools.push({\n                    id: 'lti',\n                    icon: 'play',\n                    title: __('Try a test delivery'),\n                    label: __('Try a test delivery'),\n                    action() {\n                        window.location.href = deliveryUrl;\n                    }\n                });\n            }\n\n            // tool: remove selected results\n            tools.push({\n                id: 'remove',\n                icon: 'remove',\n                title: __('Remove the selected readiness check results'),\n                label: __('Remove'),\n                massAction: true,\n                action(selection) {\n                    dialog({\n                        message: __('The selected readiness check results will be removed. Continue ?'),\n                        autoRender: true,\n                        autoDestroy: true,\n                        onOkBtn() {\n                            remove(selection);\n                        }\n                    });\n                }\n            });\n\n            // tool: close tab, this won't be present in an LTI iframe\n            // button should always be right most\n            if (window.self === window.top) {\n                tools.push({\n                    id: 'exitButton',\n                    icon: 'close',\n                    title: __('Exit'),\n                    label: __('Exit'),\n                    action() {\n                        window.self.close();\n                    }\n                });\n            }\n\n            // action: remove the result\n            actions.push({\n                id: 'remove',\n                icon: 'remove',\n                title: __('Remove the readiness check result?'),\n                action(id) {\n                    dialog({\n                        autoRender: true,\n                        autoDestroy: true,\n                        message: __('The readiness check result will be removed. Continue ?'),\n                        onOkBtn() {\n                            remove([id]);\n                        }\n                    });\n                }\n            });\n\n            // column: Workstation identifier\n            model.push({\n                id: 'workstation',\n                label: __('Workstation')\n            });\n\n            // column: School name\n            if (config.requireSchoolName) {\n                model.push({\n                    id: 'school_name',\n                    label: __('School name')\n                });\n            }\n\n            // column: School id\n            if (config.requireSchoolId) {\n                model.push({\n                    id: 'school_id',\n                    label: __('School id')\n                });\n            }\n\n            // column: School number\n            if (config.validateSchoolName) {\n                model.push({\n                    id: 'school_number',\n                    label: __('School number')\n                });\n            }\n\n            // results of fingerprinting\n            if (config.testers.fingerprint && config.testers.fingerprint.enabled) {\n                // column: Fingerprint of the workstation\n                model.push({\n                    id: 'fingerprint-cell',\n                    label: __('Fingerprint'),\n                    transform(v, row) {\n                        return fingerprintTpl(row.fingerprint);\n                    }\n                });\n\n                $list.on('click.fingerprint', '.fingerprint-cell span.details', function(e) {\n                    const id = $(e.target)\n                        .closest('tr')\n                        .data('itemIdentifier');\n                    const row = _.find(dataset.data, { id: id });\n                    if (row) {\n                        dialog({\n                            content: detailsTpl(fingerprintTester.getSummary(row.fingerprint)),\n                            buttons: 'ok',\n                            autoRender: true,\n                            autoDestroy: true\n                        });\n                    }\n                });\n            }\n\n            // results of screen test\n            if (config.testers.screen && config.testers.screen.enabled) {\n                // column: Screen Width and Height\n                model.push({\n                    id: 'screen_size',\n                    label: __('Screen resolution'),\n                    transform(value, row) {\n                        if (row.screen && row.screen.width && row.screen.height) {\n                            return row.screen.width + 'x' + row.screen.height;\n                        }\n                    }\n                });\n            }\n\n            // results of browser test\n            if (config.testers.browser && config.testers.browser.enabled) {\n                // column: Operating system information\n                model.push({\n                    id: 'os',\n                    label: __('OS')\n                });\n\n                // column: Browser information\n                model.push({\n                    id: 'browser',\n                    label: __('Browser')\n                });\n            }\n\n            // results of performances test\n            if (config.testers.performance && config.testers.performance.enabled) {\n                // column: Performances of the workstation\n                model.push({\n                    id: 'performance',\n                    label: __('Performances'),\n                    transform(value) {\n                        const status = performancesTester.getFeedback(value);\n                        return status.feedback && status.feedback.message;\n                    }\n                });\n            }\n\n            // results of bandwidth test\n            if (config.testers.bandwidth && config.testers.bandwidth.enabled) {\n                // column: Available bandwidth\n                model.push({\n                    id: 'bandwidth',\n                    label: __('Bandwidth'),\n                    transform: formatBandwidth\n                });\n            }\n\n            // results of intensive bandwidth test\n            if (config.testers.intensive_bandwidth && config.testers.intensive_bandwidth.enabled) {\n                // column: Available bandwidth\n                model.push({\n                    id: 'intensive_bandwidth',\n                    label: __('Intensive bandwidth'),\n                    transform: formatBandwidth\n                });\n            }\n\n            // results of upload speed test\n            if (config.testers.upload && config.testers.upload.enabled) {\n                // column: Available upload speed\n                model.push({\n                    id: 'upload',\n                    label: __('Upload speed'),\n                    transform: formatBandwidth\n                });\n            }\n\n            // column: Date of diagnostic\n            model.push({\n                id: 'date',\n                label: __('Date'),\n                transform: transformDateToLocal\n            });\n\n            $list\n                .on('query.datatable', () => loadingBar.start())\n                .on('load.datatable', (e, data) => {\n                    dataset = data;\n                    loadingBar.stop();\n                })\n                .datatable(\n                    {\n                        url: serviceUrl,\n                        status: {\n                            empty: __('No readiness checks have been done!'),\n                            available: __('Readiness checks already done'),\n                            loading: __('Loading')\n                        },\n                        selectable: true,\n                        tools,\n                        actions,\n                        model\n                    },\n                    dataset\n                );\n        }\n    };\n});\n\n","\ndefine('css!taoClientDiagnosticCss/exclusion-list-form',[],function(){});\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA;\n *\n *\n */\ndefine('taoClientDiagnostic/controller/ExclusionList/editInstance',['jquery', 'ui/tooltipster', 'select2', 'css!taoClientDiagnosticCss/exclusion-list-form'], function(\n    $,\n    tooltipster\n) {\n    'use strict';\n\n    return {\n        start() {}\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015-2021 Open Assessment Technologies SA\n */\ndefine('taoClientDiagnostic/controller/routes',{\n    Authenticator: {\n        actions: {\n            login: 'controller/Authenticator/login'\n        }\n    },\n    CompatibilityChecker: {\n        actions: {\n            index: 'controller/CompatibilityChecker/diagnostics'\n        }\n    },\n    Diagnostic: {\n        actions: {\n            index: 'controller/Diagnostic/index',\n            diagnostic: 'controller/Diagnostic/diagnostic'\n        }\n    },\n    ExcludedBrowsers: {\n        actions: {\n            editInstance: 'controller/ExclusionList/editInstance'\n        }\n    },\n    ExcludedOS: {\n        actions: {\n            editInstance: 'controller/ExclusionList/editInstance'\n        }\n    }\n});\n\n","\n(function(c){var d=document,a='appendChild',i='styleSheet',s=d.createElement('style');s.type='text/css';d.getElementsByTagName('head')[0][a](s);s[i]?s[i].cssText=c:s[a](d.createTextNode(c));})\n('.diagnostics-content-area{max-width:768px;margin:40px auto 40px auto}.diagnostics-main-area{margin:40px auto 0 auto;background:#f3f1ef;border:1px solid #ddd;border-radius:2px;-webkit-border-radius:2px;padding:20px}.diagnostics-main-area h1,.diagnostics-main-area h2,.diagnostics-main-area h3{font-style:normal;font-family:\\\"Source Sans Pro\\\",sans-serif}.diagnostics-main-area h1{margin-bottom:20px;font-size:20px;font-size:2rem}.diagnostics-main-area h2{margin:0;font-size:14px;font-size:1.4rem}.diagnostics-main-area h3{margin-top:10px;margin-bottom:5px;font-size:12px;font-size:1.2rem}.diagnostics-main-area .status h2,.diagnostics-main-area .details h2{margin:1rem 0}.diagnostics-main-area .legend{font-style:italic;font-weight:normal;font-family:\\\"Source Sans Pro\\\",sans-serif;font-size:11px;font-size:1.1rem}.diagnostics-main-area .customMsg{margin-top:10px}.diagnostics-main-area .quality-bar{height:15px;background:linear-gradient(to right, #CE1431 0%, #D57915 25%, #D5A215 50%, #D5CB15 75%, #36B111 100%);opacity:.8;-moz-border-radius:2px;-webkit-border-radius:2px;border-radius:2px;margin:5px 0 10px;position:relative}.diagnostics-main-area .quality-indicator{position:absolute;border-width:10px 8px;border-style:solid;border-color:#333 transparent transparent;top:-1px;height:25px;width:0}.diagnostics-main-area .quality-indicator[title]:before{font-size:11px;font-size:1.1rem;content:attr(title);position:absolute;top:-36px;left:-12px;text-align:center;width:24px;height:24px;line-height:24px;display:inline-block;background-color:#0e5d91;color:rgba(255,255,255,0.9);-moz-border-radius:12px;-webkit-border-radius:12px;border-radius:12px}.diagnostics-main-area .quality-indicator.wide[title]:before{left:-16px;width:32px}.diagnostics-main-area [data-result],.diagnostics-main-area .bandwidth-box{display:none}.diagnostics-main-area [data-action=bandwidth-launcher]{margin:5px 0 10px}.diagnostics-main-area li{padding-bottom:10px}.diagnostics-main-area .intro{margin-bottom:20px}.diagnostics-main-area .intro label{display:inline-block;width:150px}table.datatable [class^=\\\"icon-\\\"]{padding:0}table.datatable td{font-size:90%;font-weight:normal}table.datatable .progress .state:not(:first-child):before{content:\\' - \\'}table.datatable .progress .item-time:before{content:\\' (\\'}table.datatable .progress .item-time .total:before{content:\\' / \\'}table.datatable .progress .item-time:after{content:\\')\\'}.details table.matrix{border:1px solid #ddd;border-radius:2px;-webkit-border-radius:2px;margin-top:5px}.details table.matrix td:first-child{min-width:30%}.diagnostic-scope h1{font-family:\\\"Source Sans Pro\\\",sans-serif;font-size:22px;font-size:2.2rem;font-weight:normal}.diagnostic-scope h2{font-family:\\\"Source Sans Pro\\\",sans-serif;font-size:18px;font-size:1.8rem;margin:30px 0 10px}.diagnostic-scope form.daterange label{padding:0}.diagnostic-scope form.daterange input{margin:0 10px}.diagnostic-scope table.datatable [class^=\\\"icon-\\\"]{padding:0}.diagnostic-scope table.datatable td{font-size:90%;font-weight:normal}.diagnostic-scope .content{margin:auto}.diagnostic-scope .diagnostic-index .content,.diagnostic-scope .diagnostic-runner .content{width:100%}.diagnostic-scope .diagnostic-index .message,.diagnostic-scope .diagnostic-runner .message{padding:8px;text-align:center}.diagnostic-scope .panel .action-bar{background:#266d9c;padding:3px;overflow:hidden;color:#e7eff4}.diagnostic-scope .panel .action-bar .btn-info{overflow:hidden;background:transparent;border:1px rgba(255,255,255,0.3) solid}.diagnostic-scope .diagnostics-main-area{margin-top:0px;max-width:800px}.diagnostic-scope .detailed-value{display:flex;justify-content:space-between}.diagnostic-scope .detailed-value.errors{color:#d8ae5b}.diagnostic-scope .detailed-value .details{font-size:2rem;cursor:pointer;color:#3e7da7}.diagnostic-scope .detailed-value .details:hover{color:#03131d}.action-bar .tool-exitButton,.action-bar [data-control=\\\"exitButton\\\"]{float:right}\\n\\n/*# sourceMappingURL=../../../taoClientDiagnostic/views/css/diagnostics.css.map */.exclusion-list-form .xhtml_form input[type=\\\"text\\\"],.exclusion-list-form .xhtml_form select{width:60%}.exclusion-list-form .xhtml_form .icon-help.tooltipstered{float:right;line-height:25px}\\n\\n/*# sourceMappingURL=../../../taoClientDiagnostic/views/css/exclusion-list-form.css.map */');\n","\ndefine(\"taoClientDiagnostic/loader/taoClientDiagnostic.bundle\", function(){});\n","window.bundles = (window.bundles || []).concat([\"taoQtiItem/loader/taoQtiItem.min\",\"taoItems/loader/taoItems.min\"]);\n"]}